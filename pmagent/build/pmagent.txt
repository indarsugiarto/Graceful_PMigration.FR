
build/pmagent.elf:     file format elf32-littlearm
build/pmagent.elf
architecture: armv5te, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00005f00

Program Header:
    LOAD off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**15
         filesz 0x00007611 memsz 0x00007611 flags r-x
    LOAD off    0x00008000 vaddr 0x00400000 paddr 0x00400000 align 2**15
         filesz 0x00000000 memsz 0x0000013c flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 RO_DATA       00001711  00005f00  00005f00  00005f00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 ZI_DATA       0000013c  00400000  00400000  00008000  2**2
                  ALLOC
  2 .comment      00000030  00000000  00000000  00007611  2**0
                  CONTENTS, READONLY
  3 .ARM.attributes 00000027  00000000  00000000  00007641  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00005f00 l    d  RO_DATA	00000000 RO_DATA
00400000 l    d  ZI_DATA	00000000 ZI_DATA
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    df *ABS*	00000000 sark_alib.o
00000001 l       *ABS*	00000000 GNU
00000000 l       *ABS*	00000000 NULL
80000000 l       *ABS*	00000000 BIT_31
00000001 l       *ABS*	00000000 BUF_WRITE
00000012 l       *ABS*	00000000 NUM_CPUS
00000006 l       *ABS*	00000000 NUM_LINKS
00000000 l       *ABS*	00000000 ITCM_BASE
00008000 l       *ABS*	00000000 ITCM_SIZE
00008000 l       *ABS*	00000000 ITCM_TOP
00400000 l       *ABS*	00000000 DTCM_BASE
00010000 l       *ABS*	00000000 DTCM_SIZE
00410000 l       *ABS*	00000000 DTCM_TOP
70000000 l       *ABS*	00000000 SDRAM_BASE_UNBUF
60000000 l       *ABS*	00000000 SDRAM_BASE_BUF
60000000 l       *ABS*	00000000 SDRAM_BASE
08000000 l       *ABS*	00000000 SDRAM_SIZE
68000000 l       *ABS*	00000000 SDRAM_TOP
f5000000 l       *ABS*	00000000 SYSRAM_BASE_UNBUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE_BUF
e5000000 l       *ABS*	00000000 SYSRAM_BASE
00008000 l       *ABS*	00000000 SYSRAM_SIZE
e5008000 l       *ABS*	00000000 SYSRAM_TOP
f6000000 l       *ABS*	00000000 ROM_BASE
00008000 l       *ABS*	00000000 ROM_SIZE
f6008000 l       *ABS*	00000000 ROM_TOP
10000000 l       *ABS*	00000000 CC_BASE_UNBUF
20000000 l       *ABS*	00000000 CC_BASE_BUF
20000000 l       *ABS*	00000000 CC_BASE
00000000 l       *ABS*	00000000 CC_TCR
00000004 l       *ABS*	00000000 CC_TXDATA
00000008 l       *ABS*	00000000 CC_TXKEY
0000000c l       *ABS*	00000000 CC_RSR
00000010 l       *ABS*	00000000 CC_RXDATA
00000014 l       *ABS*	00000000 CC_RXKEY
00000018 l       *ABS*	00000000 CC_SAR
0000001c l       *ABS*	00000000 CC_TEST
11000000 l       *ABS*	00000000 TIMER_BASE_UNBUF
21000000 l       *ABS*	00000000 TIMER_BASE_BUF
21000000 l       *ABS*	00000000 TIMER_BASE
00000020 l       *ABS*	00000000 TIMER_OFFSET
21000000 l       *ABS*	00000000 TIMER1_BASE
21000020 l       *ABS*	00000000 TIMER2_BASE
00000000 l       *ABS*	00000000 TC_LOAD
00000004 l       *ABS*	00000000 TC_COUNT
00000008 l       *ABS*	00000000 TC_CONTROL
0000000c l       *ABS*	00000000 TC_INT_CLR
00000010 l       *ABS*	00000000 TC_RAW_INT
00000014 l       *ABS*	00000000 TC_MASK_INT
00000018 l       *ABS*	00000000 TC_BG_LOAD
00000000 l       *ABS*	00000000 T1_LOAD
00000004 l       *ABS*	00000000 T1_COUNT
00000008 l       *ABS*	00000000 T1_CONTROL
0000000c l       *ABS*	00000000 T1_INT_CLR
00000010 l       *ABS*	00000000 T1_RAW_INT
00000014 l       *ABS*	00000000 T1_MASK_INT
00000018 l       *ABS*	00000000 T1_BG_LOAD
00000020 l       *ABS*	00000000 T2_LOAD
00000024 l       *ABS*	00000000 T2_COUNT
00000028 l       *ABS*	00000000 T2_CONTROL
0000002c l       *ABS*	00000000 T2_INT_CLR
00000030 l       *ABS*	00000000 T2_RAW_INT
00000034 l       *ABS*	00000000 T2_MASK_INT
00000038 l       *ABS*	00000000 T2_BG_LOAD
1f000000 l       *ABS*	00000000 VIC_BASE_UNBUF
2f000000 l       *ABS*	00000000 VIC_BASE_BUF
2f000000 l       *ABS*	00000000 VIC_BASE
00000000 l       *ABS*	00000000 VIC_IRQST
00000004 l       *ABS*	00000000 VIC_FIQST
00000008 l       *ABS*	00000000 VIC_RAW
0000000c l       *ABS*	00000000 VIC_SELECT
00000010 l       *ABS*	00000000 VIC_ENABLE
00000014 l       *ABS*	00000000 VIC_DISABLE
00000018 l       *ABS*	00000000 VIC_SOFT_SET
0000001c l       *ABS*	00000000 VIC_SOFT_CLR
00000020 l       *ABS*	00000000 VIC_PROTECT
00000030 l       *ABS*	00000000 VIC_VADDR
00000034 l       *ABS*	00000000 VIC_DEFADDR
00000100 l       *ABS*	00000000 VIC_ADDR
00000100 l       *ABS*	00000000 VIC_ADDR0
00000104 l       *ABS*	00000000 VIC_ADDR1
00000108 l       *ABS*	00000000 VIC_ADDR2
0000010c l       *ABS*	00000000 VIC_ADDR3
00000110 l       *ABS*	00000000 VIC_ADDR4
00000114 l       *ABS*	00000000 VIC_ADDR5
00000118 l       *ABS*	00000000 VIC_ADDR6
0000011c l       *ABS*	00000000 VIC_ADDR7
00000120 l       *ABS*	00000000 VIC_ADDR8
00000124 l       *ABS*	00000000 VIC_ADDR9
00000128 l       *ABS*	00000000 VIC_ADDR10
0000012c l       *ABS*	00000000 VIC_ADDR11
00000130 l       *ABS*	00000000 VIC_ADDR12
00000134 l       *ABS*	00000000 VIC_ADDR13
00000138 l       *ABS*	00000000 VIC_ADDR14
0000013c l       *ABS*	00000000 VIC_ADDR15
00000200 l       *ABS*	00000000 VIC_CNTL
00000200 l       *ABS*	00000000 VIC_CNTL0
00000204 l       *ABS*	00000000 VIC_CNTL1
00000208 l       *ABS*	00000000 VIC_CNTL2
0000020c l       *ABS*	00000000 VIC_CNTL3
00000210 l       *ABS*	00000000 VIC_CNTL4
00000214 l       *ABS*	00000000 VIC_CNTL5
00000218 l       *ABS*	00000000 VIC_CNTL6
0000021c l       *ABS*	00000000 VIC_CNTL7
00000220 l       *ABS*	00000000 VIC_CNTL8
00000224 l       *ABS*	00000000 VIC_CNTL9
00000228 l       *ABS*	00000000 VIC_CNTL10
0000022c l       *ABS*	00000000 VIC_CNTL11
00000230 l       *ABS*	00000000 VIC_CNTL12
00000234 l       *ABS*	00000000 VIC_CNTL13
00000238 l       *ABS*	00000000 VIC_CNTL14
0000023c l       *ABS*	00000000 VIC_CNTL15
00000000 l       *ABS*	00000000 WDOG_INT
00000001 l       *ABS*	00000000 SOFTWARE_INT
00000002 l       *ABS*	00000000 COMM_RX_INT
00000003 l       *ABS*	00000000 COMM_TX_INT
00000004 l       *ABS*	00000000 TIMER1_INT
00000005 l       *ABS*	00000000 TIMER2_INT
00000006 l       *ABS*	00000000 CC_RDY_INT
00000007 l       *ABS*	00000000 CC_RPE_INT
00000008 l       *ABS*	00000000 CC_RFE_INT
00000009 l       *ABS*	00000000 CC_TFL_INT
0000000a l       *ABS*	00000000 CC_TOV_INT
0000000b l       *ABS*	00000000 CC_TMT_INT
0000000c l       *ABS*	00000000 DMA_DONE_INT
0000000d l       *ABS*	00000000 DMA_ERR_INT
0000000e l       *ABS*	00000000 DMA_TO_INT
0000000f l       *ABS*	00000000 RTR_DIAG_INT
00000010 l       *ABS*	00000000 RTR_DUMP_INT
00000011 l       *ABS*	00000000 RTR_ERR_INT
00000012 l       *ABS*	00000000 CPU_INT
00000013 l       *ABS*	00000000 ETH_TX_INT
00000014 l       *ABS*	00000000 ETH_RX_INT
00000015 l       *ABS*	00000000 ETH_PHY_INT
00000016 l       *ABS*	00000000 SLOW_CLK_INT
00000017 l       *ABS*	00000000 CC_TNF_INT
00000018 l       *ABS*	00000000 CC_MC_INT
00000019 l       *ABS*	00000000 CC_P2P_INT
0000001a l       *ABS*	00000000 CC_NN_INT
0000001b l       *ABS*	00000000 CC_FR_INT
0000001c l       *ABS*	00000000 INT0_INT
0000001d l       *ABS*	00000000 INT1_INT
0000001e l       *ABS*	00000000 GPIO8_INT
0000001f l       *ABS*	00000000 GPIO9_INT
30000000 l       *ABS*	00000000 DMA_BASE_UNBUF
40000000 l       *ABS*	00000000 DMA_BASE_BUF
40000000 l       *ABS*	00000000 DMA_BASE
00000004 l       *ABS*	00000000 DMA_ADRS
00000008 l       *ABS*	00000000 DMA_ADRT
0000000c l       *ABS*	00000000 DMA_DESC
00000010 l       *ABS*	00000000 DMA_CTRL
00000014 l       *ABS*	00000000 DMA_STAT
00000018 l       *ABS*	00000000 DMA_GCTL
0000001c l       *ABS*	00000000 DMA_CRCC
00000020 l       *ABS*	00000000 DMA_CRCR
00000024 l       *ABS*	00000000 DMA_TMTV
00000028 l       *ABS*	00000000 DMA_SCTL
00000040 l       *ABS*	00000000 DMA_STAT0
00000044 l       *ABS*	00000000 DMA_STAT1
00000048 l       *ABS*	00000000 DMA_STAT2
0000004c l       *ABS*	00000000 DMA_STAT3
00000050 l       *ABS*	00000000 DMA_STAT4
00000054 l       *ABS*	00000000 DMA_STAT5
00000058 l       *ABS*	00000000 DMA_STAT6
0000005c l       *ABS*	00000000 DMA_STAT7
00000104 l       *ABS*	00000000 DMA_AD2S
00000108 l       *ABS*	00000000 DMA_AD2T
0000010c l       *ABS*	00000000 DMA_DES2
00000180 l       *ABS*	00000000 DMA_CRCT
f0000000 l       *ABS*	00000000 PL340_BASE_UNBUF
e0000000 l       *ABS*	00000000 PL340_BASE_BUF
e0000000 l       *ABS*	00000000 PL340_BASE
00000000 l       *ABS*	00000000 MC_STAT
00000004 l       *ABS*	00000000 MC_CMD
00000008 l       *ABS*	00000000 MC_DIRC
0000000c l       *ABS*	00000000 MC_MCFG
00000010 l       *ABS*	00000000 MC_REFP
00000014 l       *ABS*	00000000 MC_CASL
00000018 l       *ABS*	00000000 MC_DQSS
0000001c l       *ABS*	00000000 MC_MRD
00000020 l       *ABS*	00000000 MC_RAS
00000024 l       *ABS*	00000000 MC_RC
00000028 l       *ABS*	00000000 MC_RCD
0000002c l       *ABS*	00000000 MC_RFC
00000030 l       *ABS*	00000000 MC_RP
00000034 l       *ABS*	00000000 MC_RRD
00000038 l       *ABS*	00000000 MC_WR
0000003c l       *ABS*	00000000 MC_WTR
00000040 l       *ABS*	00000000 MC_XP
00000044 l       *ABS*	00000000 MC_XSR
00000048 l       *ABS*	00000000 MC_ESR
0000004c l       *ABS*	00000000 MC_MCFG2
00000050 l       *ABS*	00000000 MC_MCFG3
00000100 l       *ABS*	00000000 MC_QOS0
00000104 l       *ABS*	00000000 MC_QOS1
00000108 l       *ABS*	00000000 MC_QOS2
0000010c l       *ABS*	00000000 MC_QOS3
00000110 l       *ABS*	00000000 MC_QOS4
00000114 l       *ABS*	00000000 MC_QOS5
00000118 l       *ABS*	00000000 MC_QOS6
0000011c l       *ABS*	00000000 MC_QOS7
00000120 l       *ABS*	00000000 MC_QOS8
00000124 l       *ABS*	00000000 MC_QOS9
00000128 l       *ABS*	00000000 MC_QOS10
0000012c l       *ABS*	00000000 MC_QOS11
00000130 l       *ABS*	00000000 MC_QOS12
00000134 l       *ABS*	00000000 MC_QOS13
00000138 l       *ABS*	00000000 MC_QOS14
0000013c l       *ABS*	00000000 MC_QOS15
00000200 l       *ABS*	00000000 MC_CCFG0
00000204 l       *ABS*	00000000 MC_CCFG1
00000208 l       *ABS*	00000000 MC_CCFG2
0000020c l       *ABS*	00000000 MC_CCFG3
00000300 l       *ABS*	00000000 DLL_STATUS
00000304 l       *ABS*	00000000 DLL_CONFIG0
00000308 l       *ABS*	00000000 DLL_CONFIG1
f1000000 l       *ABS*	00000000 RTR_BASE_UNBUF
e1000000 l       *ABS*	00000000 RTR_BASE_BUF
e1000000 l       *ABS*	00000000 RTR_BASE
00000000 l       *ABS*	00000000 RTR_CONTROL
00000004 l       *ABS*	00000000 RTR_STATUS
00000008 l       *ABS*	00000000 RTR_EHDR
0000000c l       *ABS*	00000000 RTR_EKEY
00000010 l       *ABS*	00000000 RTR_EDAT
00000014 l       *ABS*	00000000 RTR_ESTAT
00000018 l       *ABS*	00000000 RTR_DHDR
0000001c l       *ABS*	00000000 RTR_DKEY
00000020 l       *ABS*	00000000 RTR_DDAT
00000024 l       *ABS*	00000000 RTR_DLINK
00000028 l       *ABS*	00000000 RTR_DSTAT
0000002c l       *ABS*	00000000 RTR_DGEN
00000084 l       *ABS*	00000000 RTR_FR
00000200 l       *ABS*	00000000 RTR_DGF0
00000204 l       *ABS*	00000000 RTR_DGF1
00000208 l       *ABS*	00000000 RTR_DGF2
0000020c l       *ABS*	00000000 RTR_DGF3
00000210 l       *ABS*	00000000 RTR_DGF4
00000214 l       *ABS*	00000000 RTR_DGF5
00000218 l       *ABS*	00000000 RTR_DGF6
0000021c l       *ABS*	00000000 RTR_DGF7
00000220 l       *ABS*	00000000 RTR_DGF8
00000224 l       *ABS*	00000000 RTR_DGF9
00000228 l       *ABS*	00000000 RTR_DGF10
0000022c l       *ABS*	00000000 RTR_DGF11
00000230 l       *ABS*	00000000 RTR_DGF12
00000234 l       *ABS*	00000000 RTR_DGF13
00000238 l       *ABS*	00000000 RTR_DGF14
0000023c l       *ABS*	00000000 RTR_DGF15
00000300 l       *ABS*	00000000 RTR_DGC0
00000304 l       *ABS*	00000000 RTR_DGC1
00000308 l       *ABS*	00000000 RTR_DGC2
0000030c l       *ABS*	00000000 RTR_DGC3
00000310 l       *ABS*	00000000 RTR_DGC4
00000314 l       *ABS*	00000000 RTR_DGC5
00000318 l       *ABS*	00000000 RTR_DGC6
0000031c l       *ABS*	00000000 RTR_DGC7
00000320 l       *ABS*	00000000 RTR_DGC8
00000324 l       *ABS*	00000000 RTR_DGC9
00000328 l       *ABS*	00000000 RTR_DGC10
0000032c l       *ABS*	00000000 RTR_DGC11
00000330 l       *ABS*	00000000 RTR_DGC12
00000334 l       *ABS*	00000000 RTR_DGC13
00000338 l       *ABS*	00000000 RTR_DGC14
0000033c l       *ABS*	00000000 RTR_DGC15
00000f00 l       *ABS*	00000000 RTR_TST1
00000f04 l       *ABS*	00000000 RTR_TST2
00002000 l       *ABS*	00000000 P2P_TABLE_SIZE
00000400 l       *ABS*	00000000 MC_TABLE_SIZE
00000018 l       *ABS*	00000000 MC_RAM_WIDTH
00ffffff l       *ABS*	00000000 MC_RAM_MASK
00000008 l       *ABS*	00000000 P2P_EPW
00000003 l       *ABS*	00000000 P2P_LOG_EPW
00000007 l       *ABS*	00000000 P2P_EMASK
00000003 l       *ABS*	00000000 P2P_BPE
00000007 l       *ABS*	00000000 P2P_BMASK
00db6db6 l       *ABS*	00000000 P2P_INIT
e1004000 l       *ABS*	00000000 RTR_MCRAM_BASE
e1005000 l       *ABS*	00000000 RTR_MCRAM_TOP
e1008000 l       *ABS*	00000000 RTR_MCKEY_BASE
e1009000 l       *ABS*	00000000 RTR_MCKEY_TOP
e100c000 l       *ABS*	00000000 RTR_MCMASK_BASE
e100d000 l       *ABS*	00000000 RTR_MCMASK_TOP
e1010000 l       *ABS*	00000000 RTR_P2P_BASE
e1018000 l       *ABS*	00000000 RTR_P2P_TOP
00000020 l       *ABS*	00000000 MC_CAM_WIDTH
f2000000 l       *ABS*	00000000 SYSCTL_BASE_UNBUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE_BUF
e2000000 l       *ABS*	00000000 SYSCTL_BASE
5ec00000 l       *ABS*	00000000 SC_CODE
59111012 l       *ABS*	00000000 CHIP_ID_CODE
00000000 l       *ABS*	00000000 SC_CHIP_ID
00000004 l       *ABS*	00000000 SC_CPU_DIS
00000008 l       *ABS*	00000000 SC_SET_IRQ
0000000c l       *ABS*	00000000 SC_CLR_IRQ
00000010 l       *ABS*	00000000 SC_SET_OK
00000010 l       *ABS*	00000000 SC_CPU_OK
00000014 l       *ABS*	00000000 SC_CLR_OK
00000018 l       *ABS*	00000000 SC_SOFT_RST_L
0000001c l       *ABS*	00000000 SC_HARD_RST_L
00000020 l       *ABS*	00000000 SC_SUBS_RST_L
00000024 l       *ABS*	00000000 SC_SOFT_RST_P
00000028 l       *ABS*	00000000 SC_HARD_RST_P
0000002c l       *ABS*	00000000 SC_SUBS_RST_P
00000030 l       *ABS*	00000000 SC_RST_CODE
00000034 l       *ABS*	00000000 SC_MON_ID
00000038 l       *ABS*	00000000 SC_MISC_CTRL
0000003c l       *ABS*	00000000 GPIO_RES
00000040 l       *ABS*	00000000 GPIO_PORT
00000044 l       *ABS*	00000000 GPIO_DIR
00000048 l       *ABS*	00000000 GPIO_SET
0000004c l       *ABS*	00000000 GPIO_CLR
00000048 l       *ABS*	00000000 GPIO_READ
00000050 l       *ABS*	00000000 SC_PLL1
00000054 l       *ABS*	00000000 SC_PLL2
00000058 l       *ABS*	00000000 SC_FLAG
00000058 l       *ABS*	00000000 SC_SETFLAG
0000005c l       *ABS*	00000000 SC_CLRFLAG
00000060 l       *ABS*	00000000 SC_CLKMUX
00000064 l       *ABS*	00000000 SC_SLEEP
00000068 l       *ABS*	00000000 SC_TS0
0000006c l       *ABS*	00000000 SC_TS1
00000070 l       *ABS*	00000000 SC_TS2
00000080 l       *ABS*	00000000 SC_ARB0
00000100 l       *ABS*	00000000 SC_TAS0
00000180 l       *ABS*	00000000 SC_TAC0
00000200 l       *ABS*	00000000 SC_LINK_DIS
00000000 l       *ABS*	00000000 RST_POR
00000001 l       *ABS*	00000000 RST_WDT
00000002 l       *ABS*	00000000 RST_USER
00000003 l       *ABS*	00000000 RST_SW
00000004 l       *ABS*	00000000 RST_WDI
f3000000 l       *ABS*	00000000 WDOG_BASE_UNBUF
e3000000 l       *ABS*	00000000 WDOG_BASE_BUF
e3000000 l       *ABS*	00000000 WDOG_BASE
00000000 l       *ABS*	00000000 WD_LOAD
00000004 l       *ABS*	00000000 WD_COUNT
00000008 l       *ABS*	00000000 WD_CTRL
0000000c l       *ABS*	00000000 WD_INTCLR
00000010 l       *ABS*	00000000 WD_RAWINT
00000014 l       *ABS*	00000000 WD_MSKINT
00000c00 l       *ABS*	00000000 WD_LOCK
1acce551 l       *ABS*	00000000 WD_CODE
00000001 l       *ABS*	00000000 WD_INT_B
00000002 l       *ABS*	00000000 WD_RST_B
f4000000 l       *ABS*	00000000 ETH_BASE_UNBUF
e4000000 l       *ABS*	00000000 ETH_BASE_BUF
e4000000 l       *ABS*	00000000 ETH_BASE
e4000000 l       *ABS*	00000000 ETH_TX_BASE
00000600 l       *ABS*	00000000 ETH_TX_SIZE
e4000600 l       *ABS*	00000000 ETH_TX_TOP
e4004000 l       *ABS*	00000000 ETH_RX_BASE
00000c00 l       *ABS*	00000000 ETH_RX_SIZE
e4004c00 l       *ABS*	00000000 ETH_RX_TOP
e4008000 l       *ABS*	00000000 ETH_RX_DESC_RAM
e400c000 l       *ABS*	00000000 ETH_REGS
00000000 l       *ABS*	00000000 ETH_CONTROL
00000004 l       *ABS*	00000000 ETH_STATUS
00000008 l       *ABS*	00000000 ETH_TX_LEN
0000000c l       *ABS*	00000000 ETH_TX_CMD
00000010 l       *ABS*	00000000 ETH_RX_CMD
00000014 l       *ABS*	00000000 ETH_MAC_LO
00000018 l       *ABS*	00000000 ETH_MAC_HI
0000001c l       *ABS*	00000000 ETH_PHY_CTRL
00000020 l       *ABS*	00000000 ETH_INT_CLR
00000024 l       *ABS*	00000000 ETH_RX_BUF_RP
0000002c l       *ABS*	00000000 ETH_RX_DESC_RP
00000001 l       *ABS*	00000000 ETH_TX_CLR
00000010 l       *ABS*	00000000 ETH_RX_CLR
00000001 l       *ABS*	00000000 PHY_CTRL_NRST
00000002 l       *ABS*	00000000 PHY_CTRL_DIN
00000004 l       *ABS*	00000000 PHY_CTRL_DOUT
00000008 l       *ABS*	00000000 PHY_CTRL_OE
00000010 l       *ABS*	00000000 PHY_CTRL_CLK
00000000 l       *ABS*	00000000 PKT_MC
00400000 l       *ABS*	00000000 PKT_P2P
00800000 l       *ABS*	00000000 PKT_NN
00a00000 l       *ABS*	00000000 PKT_NND
00c00000 l       *ABS*	00000000 PKT_FR
00020000 l       *ABS*	00000000 PKT_PL
00020000 l       *ABS*	00000000 PKT_MC_PL
00420000 l       *ABS*	00000000 PKT_P2P_PL
00820000 l       *ABS*	00000000 PKT_NN_PL
00c20000 l       *ABS*	00000000 PKT_FR_PL
0000000a l       *ABS*	00000000 CLK_XTAL_MHZ
0007011a l       *ABS*	00000000 PLL_260
0007011e l       *ABS*	00000000 PLL_300
00070121 l       *ABS*	00000000 PLL_330
00070128 l       *ABS*	00000000 PLL_400
00000050 l       *ABS*	00000000 PLL_LOCK_TIME
809488a5 l       *ABS*	00000000 PLL_CLK_SEL
00000020 l       *ABS*	00000000 SERIAL_NCS
00000010 l       *ABS*	00000000 SERIAL_CLK
00000008 l       *ABS*	00000000 SERIAL_SI
00000004 l       *ABS*	00000000 SERIAL_SO
00000038 l       *ABS*	00000000 SERIAL_OE
80000000 l       *ABS*	00000000 SDRAM_TQ
40000000 l       *ABS*	00000000 SDRAM_DPD
20000000 l       *ABS*	00000000 SDRAM_HERE
08000000 l       *ABS*	00000000 JTAG_NTRST
04000000 l       *ABS*	00000000 JTAG_TMS
02000000 l       *ABS*	00000000 JTAG_TDI
01000000 l       *ABS*	00000000 JTAG_TCK
00100000 l       *ABS*	00000000 JTAG_RTCK
00080000 l       *ABS*	00000000 JTAG_TDO
00008000 l       *ABS*	00000000 JTAG_INT
00000001 l       *ABS*	00000000 LED_0
00000010 l       *ABS*	00000000 MODE_USER
00000011 l       *ABS*	00000000 MODE_FIQ
00000012 l       *ABS*	00000000 MODE_IRQ
00000013 l       *ABS*	00000000 MODE_SVC
00000017 l       *ABS*	00000000 MODE_ABT
0000001b l       *ABS*	00000000 MODE_UND
0000001f l       *ABS*	00000000 MODE_SYS
00000020 l       *ABS*	00000000 THUMB_BIT
00000080 l       *ABS*	00000000 IMASK_IRQ
00000040 l       *ABS*	00000000 IMASK_FIQ
000000c0 l       *ABS*	00000000 IMASK_ALL
00000001 l       *ABS*	00000000 SARK_EVENT
00000180 l       *ABS*	00000000 SVC_STACK
00000100 l       *ABS*	00000000 IRQ_STACK
00000100 l       *ABS*	00000000 FIQ_STACK
00000004 l       *ABS*	00000000 NUM_SDP_MSGS
0000000f l       *ABS*	00000000 SARK_SLOT
00000010 l       *ABS*	00000000 INIT_EVENTS
deaddead l       *ABS*	00000000 DEAD_WORD
00000001 l       *ABS*	00000000 APLX_ACOPY
00000002 l       *ABS*	00000000 APLX_RCOPY
00000003 l       *ABS*	00000000 APLX_FILL
00000004 l       *ABS*	00000000 APLX_EXEC
000000ff l       *ABS*	00000000 APLX_END
00000010 l       *ABS*	00000000 APLX_ENTRY_SIZE
00000040 l       *ABS*	00000000 APLX_BUF_SIZE
00007fc0 l       *ABS*	00000000 APLX_BUFFER
000000ff l       *ABS*	00000000 TAG_NONE
00000000 l       *ABS*	00000000 TAG_HOST
00000001 l       *ABS*	00000000 RTR_ALLOC_FIRST
00000400 l       *ABS*	00000000 RTR_ALLOC_LAST
000003ff l       *ABS*	00000000 RTR_ALLOC_MAX
00000001 l       *ABS*	00000000 ALLOC_LOCK
00000002 l       *ABS*	00000000 ALLOC_ID
00000005 l       *ABS*	00000000 A_LOCK_SEMA
00000001 l       *ABS*	00000000 A_RTE_RESET
00000002 l       *ABS*	00000000 A_RTE_UNDEF
00000003 l       *ABS*	00000000 A_RTE_SVC
00000004 l       *ABS*	00000000 A_RTE_PABT
00000005 l       *ABS*	00000000 A_RTE_DABT
00000006 l       *ABS*	00000000 A_RTE_IRQ
00000007 l       *ABS*	00000000 A_RTE_FIQ
00000008 l       *ABS*	00000000 A_RTE_VIC
00000002 l       *ABS*	00000000 A_STATE_RTE
00000006 l       *ABS*	00000000 EVENT_COUNT
00000000 l       *ABS*	00000000 CMD_VER
00000001 l       *ABS*	00000000 CMD_RUN
00000002 l       *ABS*	00000000 CMD_READ
00000003 l       *ABS*	00000000 CMD_WRITE
00000004 l       *ABS*	00000000 CMD_APLX
00000005 l       *ABS*	00000000 CMD_FILL
00000010 l       *ABS*	00000000 CMD_REMAP
00000011 l       *ABS*	00000000 CMD_LINK_READ
00000012 l       *ABS*	00000000 CMD_LINK_WRITE
00000013 l       *ABS*	00000000 CMD_AR
00000014 l       *ABS*	00000000 CMD_NNP
00000015 l       *ABS*	00000000 CMD_P2PC
00000016 l       *ABS*	00000000 CMD_SIG
00000017 l       *ABS*	00000000 CMD_FFD
00000018 l       *ABS*	00000000 CMD_AS
00000019 l       *ABS*	00000000 CMD_LED
0000001a l       *ABS*	00000000 CMD_IPTAG
0000001b l       *ABS*	00000000 CMD_SROM
0000001c l       *ABS*	00000000 CMD_ALLOC
0000001d l       *ABS*	00000000 CMD_RTR
00000040 l       *ABS*	00000000 CMD_TUBE
00000080 l       *ABS*	00000000 RC_OK
00000081 l       *ABS*	00000000 RC_LEN
00000082 l       *ABS*	00000000 RC_SUM
00000083 l       *ABS*	00000000 RC_CMD
00000084 l       *ABS*	00000000 RC_ARG
00000085 l       *ABS*	00000000 RC_PORT
00000086 l       *ABS*	00000000 RC_TIMEOUT
00000087 l       *ABS*	00000000 RC_ROUTE
00000088 l       *ABS*	00000000 RC_CPU
00000089 l       *ABS*	00000000 RC_DEAD
0000008a l       *ABS*	00000000 RC_BUF
0000008b l       *ABS*	00000000 RC_P2P_NOREPLY
0000008c l       *ABS*	00000000 RC_P2P_REJECT
0000008d l       *ABS*	00000000 RC_P2P_BUSY
0000008e l       *ABS*	00000000 RC_P2P_TIMEOUT
0000008f l       *ABS*	00000000 RC_PKT_TX
00000000 l       *ABS*	00000000 TYPE_BYTE
00000001 l       *ABS*	00000000 TYPE_HALF
00000002 l       *ABS*	00000000 TYPE_WORD
00000005 l       *ABS*	00000000 PORT_SHIFT
000000e0 l       *ABS*	00000000 PORT_MASK
0000001f l       *ABS*	00000000 CPU_MASK
000000ff l       *ABS*	00000000 PORT_ETH
00000100 l       *ABS*	00000000 SDP_BUF_SIZE
00000080 l       *ABS*	00000000 VCPU_SIZE
0000002c l       *ABS*	00000000 VCPU_RT_CODE
0000002e l       *ABS*	00000000 VCPU_CPU_STATE
0000002f l       *ABS*	00000000 VCPU_APP_ID
0000001c l       *ABS*	00000000 SARK_MSG_INT
0000001d l       *ABS*	00000000 SARK_SIG_INT
00000000 l       *ABS*	00000000 SARK_VIRT_CPU
00000008 l       *ABS*	00000000 SARK_RANDOM
00000030 l       *ABS*	00000000 SARK_CPU_CLK
00000020 l       *ABS*	00000000 SV_SSIZE
00000060 l       *ABS*	00000000 SV_USIZE
00000080 l       *ABS*	00000000 SV_ISIZE
00000020 l       *ABS*	00000000 SV_VSIZE
00000040 l       *ABS*	00000000 SV_RSIZE
00001000 l       *ABS*	00000000 SV_SIZE
e5007fe0 l       *ABS*	00000000 SV_SROM
e5007f80 l       *ABS*	00000000 SV_UBASE
e5007f00 l       *ABS*	00000000 SV_IBASE
e5007f00 l       *ABS*	00000000 SV_SV
00000100 l       *ABS*	00000000 SYS_BOOT
e5007000 l       *ABS*	00000000 SYS_USER_TOP
e5000100 l       *ABS*	00000000 SYS_USER_BASE
e5007ee0 l       *ABS*	00000000 SV_VECTORS
e5007ea0 l       *ABS*	00000000 SV_RANDOM
e5007000 l       *ABS*	00000000 SV_VCPU
e5007900 l       *ABS*	00000000 SV_SPARE
000005a0 l       *ABS*	00000000 SPARE_SIZE
e5007fe0 l       *ABS*	00000000 SROM_FLAG_BASE
e5007f80 l       *ABS*	00000000 STATUS_MAP_BASE
e5007ee0 l       *ABS*	00000000 RST_BLOCK_BASE
00008000 l       *ABS*	00000000 SRF_PRESENT
000000f0 l       *ABS*	00000000 SRF_HW_VER
00000008 l       *ABS*	00000000 SRF_PHY_INIT
00000004 l       *ABS*	00000000 SRF_PHY_RST
00000002 l       *ABS*	00000000 SRF_PHY_WAIT
00000001 l       *ABS*	00000000 SRF_ETH
00000000 l       *ABS*	00000000 SRF_NONE
00005f20 l       RO_DATA	00000000 reset_vec
00005f04 l       RO_DATA	00000000 undef
00005f24 l       RO_DATA	00000000 undef_vec
00005f28 l       RO_DATA	00000000 svc_vec
00005f2c l       RO_DATA	00000000 pabt_vec
00005f30 l       RO_DATA	00000000 dabt_vec
00005f3c l       RO_DATA	00000000 fiq_vec
00005f78 l       RO_DATA	00000000 reset_entry
00005fd8 l       RO_DATA	00000000 undef_error
00005fe0 l       RO_DATA	00000000 svc_error
00005fe8 l       RO_DATA	00000000 pabt_error
00005ff0 l       RO_DATA	00000000 dabt_error
00005f34 l       RO_DATA	00000000 aplx_proc
00005f38 l       RO_DATA	00000000 irq_vec
00005ff8 l       RO_DATA	00000000 irq_error
00006000 l       RO_DATA	00000000 fiq_error
00005f40 l       RO_DATA	00000000 svc_stack
00005f42 l       RO_DATA	00000000 irq_stack
00005f44 l       RO_DATA	00000000 fiq_stack
00005f46 l       RO_DATA	00000000 stack_size
00005f48 l       RO_DATA	00000000 code_top
00005f4c l       RO_DATA	00000000 heap_base
00005f50 l       RO_DATA	00000000 stack_top
00005f54 l       RO_DATA	00000000 stack_fill
00005f58 l       RO_DATA	00000000 num_msgs
00005f59 l       RO_DATA	00000000 sark_slot
00005f5a l       RO_DATA	00000000 num_events
00005f5b l       RO_DATA	00000000 api
00005f5c l       RO_DATA	00000000 app_id
00005f5d l       RO_DATA	00000000 app_flags
00005f5e l       RO_DATA	00000000 __PAD
00005f60 l       RO_DATA	00000000 event_vec
00005fd0 l       RO_DATA	00000000 reset_error
00006014 l       RO_DATA	00000000 exc_error
00006038 l       RO_DATA	00000000 cc_error
000060dc l       RO_DATA	00000000 lg1
0000612c l       RO_DATA	00000000 ws1
0000618c l       RO_DATA	00000000 wc2
00006174 l       RO_DATA	00000000 wc1
00006240 l       RO_DATA	00000000 aplx_buffer
00006244 l       RO_DATA	00000000 aplx_loader
00006230 l       RO_DATA	00000000 aplx_l0
0000625c l       RO_DATA	00000000 aplx_copy
00006258 l       RO_DATA	00000000 aplx_rcopy
0000626a l       RO_DATA	00000000 aplx_fill
0000627a l       RO_DATA	00000000 aplx_exec
00006270 l       RO_DATA	00000000 aplx_l1
00000000 l    df *ABS*	00000000 sark_base.c
00000000 l    df *ABS*	00000000 sark_event.c
000075e3 l     O RO_DATA	00000006 vic_bit
00000000 l    df *ABS*	00000000 sark_timer.c
00000000 l    df *ABS*	00000000 sark_hw.c
00000000 l    df *ABS*	00000000 sark_isr.c
00000000 l    df *ABS*	00000000 sark_alloc.c
00000000 l    df *ABS*	00000000 sark_io.c
0000709c l     F RO_DATA	00000040 io_buf_init
000071d0 l     F RO_DATA	000000c2 io_put_fixed
0040004c l     O ZI_DATA	00000004 io_msg
00007600 l     O RO_DATA	00000011 hex
00400050 l     O ZI_DATA	00000004 io_buf
00400054 l     O ZI_DATA	00000004 buf_ptr
00400058 l     O ZI_DATA	00000004 sp_ptr
00000000 l    df *ABS*	00000000 sark_pkt.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 pmagent.c
00000000 l    df *ABS*	00000000 sark_build.c
00000000 l    df *ABS*	00000000 
00000040 l       *ABS*	00000000 RO_FROM
00000010 l       *ABS*	00000000 APLX_ENTRY
00001744 l       *ABS*	00000000 RW_FROM
00000000 l       *UND*	00000000 __deregister_frame_info
00000000 l       *UND*	00000000 _ITM_registerTMCloneTable
00400000 l       *ABS*	00000000 DTCM_BASE
00400000 l       *ABS*	00000000 RW_BASE
00000000 l       *ABS*	00000000 RW_LENGTH
00000040 l       *ABS*	00000000 APLX_SIZE
00000000 l       *UND*	00000000 _ITM_deregisterTMCloneTable
00400000 l       *ABS*	00000000 ZI_BASE
00005f00 l       *ABS*	00000000 RO_BASE
00005f00 l       *ABS*	00000000 ITCM_BASE
00000000 l       *UND*	00000000 _Jv_RegisterClasses
00000000 l       *UND*	00000000 __register_frame_info
0000013c l       *ABS*	00000000 ZI_LENGTH
00006a38 g     F RO_DATA	00000038 event_queue
000060c8 g     F RO_DATA	00000000 sark_lock_get
0000658c  w    F RO_DATA	00000010 sark_pre_main
00400000 g     O ZI_DATA	00000004 itcm_addr
00006430 g     F RO_DATA	00000034 sark_shmsg_get
00000800 g       *ABS*	00000000 STACK_SIZE
00006216 g     F RO_DATA	00000000 sark_bx
0000614c g     F RO_DATA	00000000 sark_msg_cpy
00006b54 g     F RO_DATA	0000003c event_alloc
000063c0 g     F RO_DATA	0000001e sark_block_init
00006f7c g     F RO_DATA	00000028 sark_fiq_han
00006410 g     F RO_DATA	00000020 sark_msg_free
00006d30 g     F RO_DATA	00000074 timer2_int
000062b4 g     F RO_DATA	00000090 sdpHandler
00006344 g     F RO_DATA	00000050 c_main
00006788 g     F RO_DATA	00000174 sark_int
00006ebc g     F RO_DATA	00000030 rxpkt_queue
000061e0 g     F RO_DATA	00000000 sark_int_han
00006998 g     F RO_DATA	0000005c event_wait
00006774 g     F RO_DATA	00000012 sark_wait
000060b8 g     F RO_DATA	00000000 spin1_mode_restore
00006764 g     F RO_DATA	00000010 sark_cmd_fill
00006e3c g     F RO_DATA	00000038 sig_queue
00006da4 g     F RO_DATA	00000050 sark_vic_init
0000606c g     F RO_DATA	00000000 cpu_shutdown
000060b8 g     F RO_DATA	00000000 cpu_int_restore
00401400 g       *ABS*	00000000 STACK_TOP
0040005c g     O ZI_DATA	00000004 myCoreID
0040013c g       ZI_DATA	00000000 HEAP_BASE
00006fa4 g     F RO_DATA	000000c8 sark_xalloc
000075ec g     O RO_DATA	00000014 queue_events
00400060 g     O ZI_DATA	00000004 myTick
00006218 g     F RO_DATA	00000000 __gnu_thumb1_case_uqi
00006e74 g     F RO_DATA	00000048 timer_queue
00006464 g     F RO_DATA	00000024 sark_shmsg_free
00006c58 g     F RO_DATA	00000040 event_register_timer
0000602c g       RO_DATA	00000000 rt_error
00400004 g     O ZI_DATA	00000004 dtcm_addr
000063b0 g     F RO_DATA	00000010 sark_cpu_state
00400008 g     O ZI_DATA	00000004 ajmp_addr
0000659c  w    F RO_DATA	00000010 sark_post_main
00005f00 g       RO_DATA	00000000 cpu_reset
000061b0 g     F RO_DATA	00000000 sark_div10
00006008 g       RO_DATA	00000000 vic_error
00006f6c g     F RO_DATA	00000010 timer2_int_han
00006c98 g     F RO_DATA	00000080 timer_schedule
00400064 g     O ZI_DATA	00000004 stubTriggerKey
000075c8 g     O RO_DATA	00000008 build_name
00006214  w    F RO_DATA	00000000 sark_config
000069f4 g     F RO_DATA	0000002c event_pause
000075d0 g     O RO_DATA	00000004 build_date
000060ec g     F RO_DATA	00000000 sark_lock_free
0000706c g     F RO_DATA	00000018 sark_alloc
00006090 g     F RO_DATA	00000000 cpu_init_mode
00006282 g     F RO_DATA	00000032 timerHandler
0000615c g     F RO_DATA	00000000 sark_word_cpy
00006f2c g     F RO_DATA	00000040 user_queue
0000607c g     F RO_DATA	00000000 cpu_sleep
00400068 g     O ZI_DATA	0000003c sark
000065ac g     F RO_DATA	000000a8 sark_msg_send
000060c0 g     F RO_DATA	00000000 spin1_wfi
00006654 g     F RO_DATA	00000040 sark_cmd_ver
000060c0 g     F RO_DATA	00000000 cpu_wfi
00006a20 g     F RO_DATA	00000018 event_stop
000060a8 g     F RO_DATA	00000000 cpu_int_disable
00006adc g     F RO_DATA	00000064 event_new
00006df4 g     F RO_DATA	00000048 sark_vic_set
00006100 g     F RO_DATA	00000000 sark_mem_cpy
00007084 g     F RO_DATA	00000018 sark_heap_init
000068fc g     F RO_DATA	0000009c event_register_queue
004000a4 g     O ZI_DATA	00000098 event
000066fa g     F RO_DATA	0000006a sark_cmd_write
00006488  w    F RO_DATA	00000104 sark_init
00006398  w    F RO_DATA	0000000c rte_handler
00006228 g     F RO_DATA	00000000 sark_aplx
00006d18 g     F RO_DATA	00000016 timer_schedule_proc
00006b90 g     F RO_DATA	000000c8 event_start
00007294 g     F RO_DATA	000002b4 io_printf
00006128 g     F RO_DATA	00000000 sark_word_set
00006b40 g     F RO_DATA	00000014 event_queue_proc
00006210 g     F RO_DATA	00000000 null_int_han
00006394  w    F RO_DATA	00000002 schedule_sysmode
00006a70 g     F RO_DATA	0000006c event_run2
00006114 g     F RO_DATA	00000000 sark_str_cpy
000063a4 g     F RO_DATA	0000000c sark_core_id
00006eec g     F RO_DATA	00000040 sdp_queue
0040000c  w    O ZI_DATA	00000040 callback
000070dc g     F RO_DATA	000000f4 io_put_char
000060a8 g     F RO_DATA	00000000 spin1_int_disable
00006694 g     F RO_DATA	00000066 sark_cmd_read
00006280 g     F RO_DATA	00000002 dmaDoneHandler
00001714 g       *ABS*	00000000 RO_LENGTH
000063e0 g     F RO_DATA	00000030 sark_msg_get



Disassembly of section RO_DATA:

00005f00 <cpu_reset>:
    5f00:	e59ff018 	ldr	pc, [pc, #24]	; 5f20 <reset_vec>

00005f04 <undef>:
    5f04:	e59ff018 	ldr	pc, [pc, #24]	; 5f24 <undef_vec>
    5f08:	e59ff018 	ldr	pc, [pc, #24]	; 5f28 <svc_vec>
    5f0c:	e59ff018 	ldr	pc, [pc, #24]	; 5f2c <pabt_vec>
    5f10:	e59ff018 	ldr	pc, [pc, #24]	; 5f30 <dabt_vec>
    5f14:	ebfffffa 	bl	5f04 <undef>
    5f18:	e51ffff0 	ldr	pc, [pc, #-4080]	; 4f30 <P2P_TABLE_SIZE+0x2f30>
    5f1c:	e59ff018 	ldr	pc, [pc, #24]	; 5f3c <fiq_vec>

00005f20 <reset_vec>:
    5f20:	00005f78 	.word	0x00005f78

00005f24 <undef_vec>:
    5f24:	00005fd8 	.word	0x00005fd8

00005f28 <svc_vec>:
    5f28:	00005fe0 	.word	0x00005fe0

00005f2c <pabt_vec>:
    5f2c:	00005fe8 	.word	0x00005fe8

00005f30 <dabt_vec>:
    5f30:	00005ff0 	.word	0x00005ff0

00005f34 <aplx_proc>:
    5f34:	00006229 	.word	0x00006229

00005f38 <irq_vec>:
    5f38:	00005ff8 	.word	0x00005ff8

00005f3c <fiq_vec>:
    5f3c:	00006000 	.word	0x00006000

00005f40 <svc_stack>:
    5f40:	0060      	.short	0x0060

00005f42 <irq_stack>:
    5f42:	0040      	.short	0x0040

00005f44 <fiq_stack>:
    5f44:	0040      	.short	0x0040

00005f46 <stack_size>:
    5f46:	0800      	.short	0x0800

00005f48 <code_top>:
    5f48:	00001714 	.word	0x00001714

00005f4c <heap_base>:
    5f4c:	0040013c 	.word	0x0040013c

00005f50 <stack_top>:
    5f50:	00401400 	.word	0x00401400

00005f54 <stack_fill>:
    5f54:	deaddead 	.word	0xdeaddead

00005f58 <num_msgs>:
    5f58:	04          	.byte	0x04

00005f59 <sark_slot>:
    5f59:	0f          	.byte	0x0f

00005f5a <num_events>:
    5f5a:	10          	.byte	0x10

00005f5b <api>:
	...

00005f5c <app_id>:
	...

00005f5d <app_flags>:
	...

00005f5e <__PAD>:
	...

00005f60 <event_vec>:
	...

00005f78 <reset_entry>:
    5f78:	e24f1060 	sub	r1, pc, #96	; 0x60
    5f7c:	e1c103bc 	strh	r0, [r1, #60]	; 0x3c
    5f80:	e28f0048 	add	r0, pc, #72	; 0x48
    5f84:	e5810000 	str	r0, [r1]
    5f88:	e59f00f4 	ldr	r0, [pc, #244]	; 6084 <cpu_sleep+0x8>
    5f8c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
    5f90:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
    5f94:	e3a0d902 	mov	sp, #32768	; 0x8000
    5f98:	fa00009d 	blx	6214 <sark_config>
    5f9c:	e51fd054 	ldr	sp, [pc, #-84]	; 5f50 <stack_top>
    5fa0:	e15f26b2 	ldrh	r2, [pc, #-98]	; 5f46 <stack_size>
    5fa4:	e51f1058 	ldr	r1, [pc, #-88]	; 5f54 <stack_fill>
    5fa8:	e04d0002 	sub	r0, sp, r2
    5fac:	eb00005d 	bl	6128 <sark_word_set>
    5fb0:	e1a0000d 	mov	r0, sp
    5fb4:	fa000133 	blx	6488 <sark_init>
    5fb8:	e121f000 	msr	CPSR_c, r0
    5fbc:	fa0001ec 	blx	6774 <sark_wait>
    5fc0:	fa000171 	blx	658c <sark_pre_main>
    5fc4:	fa0000de 	blx	6344 <c_main>
    5fc8:	fa000173 	blx	659c <sark_post_main>
    5fcc:	eb00002a 	bl	607c <cpu_sleep>

00005fd0 <reset_error>:
    5fd0:	e3a00001 	mov	r0, #1
    5fd4:	ea000014 	b	602c <rt_error>

00005fd8 <undef_error>:
    5fd8:	e3a0b002 	mov	fp, #2
    5fdc:	ea00000c 	b	6014 <exc_error>

00005fe0 <svc_error>:
    5fe0:	e3a0b003 	mov	fp, #3
    5fe4:	ea00000a 	b	6014 <exc_error>

00005fe8 <pabt_error>:
    5fe8:	e3a0b004 	mov	fp, #4
    5fec:	ea000008 	b	6014 <exc_error>

00005ff0 <dabt_error>:
    5ff0:	e3a0b005 	mov	fp, #5
    5ff4:	ea000006 	b	6014 <exc_error>

00005ff8 <irq_error>:
    5ff8:	e3a0b006 	mov	fp, #6
    5ffc:	ea000004 	b	6014 <exc_error>

00006000 <fiq_error>:
    6000:	e3a0b007 	mov	fp, #7
    6004:	ea000002 	b	6014 <exc_error>

00006008 <vic_error>:
    6008:	e3a0b008 	mov	fp, #8
    600c:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
    6010:	e5900030 	ldr	r0, [r0, #48]	; 0x30

00006014 <exc_error>:
    6014:	e1a0a00e 	mov	sl, lr
    6018:	e14f8000 	mrs	r8, SPSR
    601c:	e38890c0 	orr	r9, r8, #192	; 0xc0
    6020:	e3c99020 	bic	r9, r9, #32
    6024:	e12ff009 	msr	CPSR_fsxc, r9
    6028:	ea000002 	b	6038 <cc_error>

0000602c <rt_error>:
    602c:	e1a0b000 	mov	fp, r0
    6030:	e10f8000 	mrs	r8, CPSR
    6034:	e1a0a00e 	mov	sl, lr

00006038 <cc_error>:
    6038:	e59fc048 	ldr	ip, [pc, #72]	; 6088 <cpu_sleep+0xc>
    603c:	e59cc000 	ldr	ip, [ip]
    6040:	e3a09080 	mov	r9, #128	; 0x80
    6044:	e59fe040 	ldr	lr, [pc, #64]	; 608c <cpu_sleep+0x10>
    6048:	e02ee99c 	mla	lr, ip, r9, lr
    604c:	e1a0900d 	mov	r9, sp
    6050:	e88e07ff 	stm	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl}
    6054:	e5ceb02c 	strb	fp, [lr, #44]	; 0x2c
    6058:	e3a08002 	mov	r8, #2
    605c:	e5ce802e 	strb	r8, [lr, #46]	; 0x2e
    6060:	e1a0000b 	mov	r0, fp
    6064:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
    6068:	fa0000ca 	blx	6398 <rte_handler>

0000606c <cpu_shutdown>:
    606c:	e321f0d3 	msr	CPSR_c, #211	; 0xd3
    6070:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
    6074:	e3e01000 	mvn	r1, #0
    6078:	e5801014 	str	r1, [r0, #20]

0000607c <cpu_sleep>:
    607c:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
    6080:	eafffffd 	b	607c <cpu_sleep>
    6084:	00001f7e 	.word	0x00001f7e
    6088:	00400068 	.word	0x00400068
    608c:	e5007000 	.word	0xe5007000

00006090 <cpu_init_mode>:
    6090:	e10f3000 	mrs	r3, CPSR
    6094:	e121f001 	msr	CPSR_c, r1
    6098:	e1a0d000 	mov	sp, r0
    609c:	e12ff003 	msr	CPSR_fsxc, r3
    60a0:	e0400102 	sub	r0, r0, r2, lsl #2
    60a4:	e12fff1e 	bx	lr

000060a8 <cpu_int_disable>:
    60a8:	e10f0000 	mrs	r0, CPSR
    60ac:	e38010c0 	orr	r1, r0, #192	; 0xc0
    60b0:	e121f001 	msr	CPSR_c, r1
    60b4:	e12fff1e 	bx	lr

000060b8 <cpu_int_restore>:
    60b8:	e12ff000 	msr	CPSR_fsxc, r0
    60bc:	e12fff1e 	bx	lr

000060c0 <cpu_wfi>:
    60c0:	ee070f90 	mcr	15, 0, r0, cr7, cr0, {4}
    60c4:	e12fff1e 	bx	lr

000060c8 <sark_lock_get>:
    60c8:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
    60cc:	e08cc100 	add	ip, ip, r0, lsl #2
    60d0:	e10f0000 	mrs	r0, CPSR
    60d4:	e38010c0 	orr	r1, r0, #192	; 0xc0
    60d8:	e121f001 	msr	CPSR_c, r1

000060dc <lg1>:
    60dc:	e59c1100 	ldr	r1, [ip, #256]	; 0x100
    60e0:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    60e4:	1afffffc 	bne	60dc <lg1>
    60e8:	e12fff1e 	bx	lr

000060ec <sark_lock_free>:
    60ec:	e3a0c4e2 	mov	ip, #-503316480	; 0xe2000000
    60f0:	e08c1101 	add	r1, ip, r1, lsl #2
    60f4:	e5911180 	ldr	r1, [r1, #384]	; 0x180
    60f8:	e121f000 	msr	CPSR_c, r0
    60fc:	e12fff1e 	bx	lr

00006100 <sark_mem_cpy>:
    6100:	e2522001 	subs	r2, r2, #1
    6104:	24d13001 	ldrbcs	r3, [r1], #1
    6108:	24c03001 	strbcs	r3, [r0], #1
    610c:	2afffffb 	bcs	6100 <sark_mem_cpy>
    6110:	e12fff1e 	bx	lr

00006114 <sark_str_cpy>:
    6114:	e4d12001 	ldrb	r2, [r1], #1
    6118:	e3520000 	cmp	r2, #0
    611c:	e4c02001 	strb	r2, [r0], #1
    6120:	1afffffb 	bne	6114 <sark_str_cpy>
    6124:	e12fff1e 	bx	lr

00006128 <sark_word_set>:
    6128:	e1a03001 	mov	r3, r1

0000612c <ws1>:
    612c:	e2522010 	subs	r2, r2, #16
    6130:	28a0000a 	stmiacs	r0!, {r1, r3}
    6134:	28a0000a 	stmiacs	r0!, {r1, r3}
    6138:	2afffffb 	bcs	612c <ws1>
    613c:	e1b02e82 	lsls	r2, r2, #29
    6140:	28a0000a 	stmiacs	r0!, {r1, r3}
    6144:	48a00002 	stmiami	r0!, {r1}
    6148:	e12fff1e 	bx	lr

0000614c <sark_msg_cpy>:
    614c:	e2800004 	add	r0, r0, #4
    6150:	e2811004 	add	r1, r1, #4
    6154:	e1d120b0 	ldrh	r2, [r1]
    6158:	e2822004 	add	r2, r2, #4

0000615c <sark_word_cpy>:
    615c:	e3120003 	tst	r2, #3
    6160:	13c22003 	bicne	r2, r2, #3
    6164:	12822004 	addne	r2, r2, #4
    6168:	e92d4010 	push	{r4, lr}
    616c:	e2522020 	subs	r2, r2, #32
    6170:	3a000005 	bcc	618c <wc2>

00006174 <wc1>:
    6174:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
    6178:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
    617c:	e8b15018 	ldm	r1!, {r3, r4, ip, lr}
    6180:	e8a05018 	stmia	r0!, {r3, r4, ip, lr}
    6184:	e2522020 	subs	r2, r2, #32
    6188:	2afffff9 	bcs	6174 <wc1>

0000618c <wc2>:
    618c:	e1b0ce02 	lsls	ip, r2, #28
    6190:	28b15018 	ldmcs	r1!, {r3, r4, ip, lr}
    6194:	28a05018 	stmiacs	r0!, {r3, r4, ip, lr}
    6198:	48b10018 	ldmmi	r1!, {r3, r4}
    619c:	48a00018 	stmiami	r0!, {r3, r4}
    61a0:	e1b0cf02 	lsls	ip, r2, #30
    61a4:	24913004 	ldrcs	r3, [r1], #4
    61a8:	24803004 	strcs	r3, [r0], #4
    61ac:	e8bd8010 	pop	{r4, pc}

000061b0 <sark_div10>:
    61b0:	e241200a 	sub	r2, r1, #10
    61b4:	e0411121 	sub	r1, r1, r1, lsr #2
    61b8:	e0811221 	add	r1, r1, r1, lsr #4
    61bc:	e0811421 	add	r1, r1, r1, lsr #8
    61c0:	e0811821 	add	r1, r1, r1, lsr #16
    61c4:	e1a011a1 	lsr	r1, r1, #3
    61c8:	e0813101 	add	r3, r1, r1, lsl #2
    61cc:	e0522083 	subs	r2, r2, r3, lsl #1
    61d0:	52811001 	addpl	r1, r1, #1
    61d4:	4282200a 	addmi	r2, r2, #10
    61d8:	e8800006 	stm	r0, {r1, r2}
    61dc:	e12fff1e 	bx	lr

000061e0 <sark_int_han>:
    61e0:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    61e4:	e24e0004 	sub	r0, lr, #4
    61e8:	e14fc000 	mrs	ip, SPSR
    61ec:	e321f01f 	msr	CPSR_c, #31
    61f0:	e92d5000 	push	{ip, lr}
    61f4:	fa000163 	blx	6788 <sark_int>
    61f8:	e8bd5000 	pop	{ip, lr}
    61fc:	e321f092 	msr	CPSR_c, #146	; 0x92
    6200:	e16ff00c 	msr	SPSR_fsxc, ip
    6204:	e3a0042f 	mov	r0, #788529152	; 0x2f000000
    6208:	e5800030 	str	r0, [r0, #48]	; 0x30
    620c:	e8bd500f 	pop	{r0, r1, r2, r3, ip, lr}

00006210 <null_int_han>:
    6210:	e25ef004 	subs	pc, lr, #4

00006214 <sark_config>:
    6214:	4770      	bx	lr

00006216 <sark_bx>:
    6216:	4700      	bx	r0

00006218 <__gnu_thumb1_case_uqi>:
    6218:	468c      	mov	ip, r1
    621a:	4671      	mov	r1, lr
    621c:	3901      	subs	r1, #1
    621e:	5c09      	ldrb	r1, [r1, r0]
    6220:	0049      	lsls	r1, r1, #1
    6222:	448e      	add	lr, r1
    6224:	4661      	mov	r1, ip
    6226:	4770      	bx	lr

00006228 <sark_aplx>:
    6228:	b5f2      	push	{r1, r4, r5, r6, r7, lr}
    622a:	4905      	ldr	r1, [pc, #20]	; (6240 <aplx_buffer>)
    622c:	a605      	add	r6, pc, #20	; (adr r6, 6244 <aplx_loader>)
    622e:	2740      	movs	r7, #64	; 0x40

00006230 <aplx_l0>:
    6230:	ce3c      	ldmia	r6!, {r2, r3, r4, r5}
    6232:	c13c      	stmia	r1!, {r2, r3, r4, r5}
    6234:	3f10      	subs	r7, #16
    6236:	d1fb      	bne.n	6230 <aplx_l0>
    6238:	1c04      	adds	r4, r0, #0
    623a:	393f      	subs	r1, #63	; 0x3f
    623c:	4708      	bx	r1
	...

00006240 <aplx_buffer>:
    6240:	00007fc0 	.word	0x00007fc0

00006244 <aplx_loader>:
    6244:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
    6246:	2801      	cmp	r0, #1
    6248:	d008      	beq.n	625c <aplx_copy>
    624a:	2802      	cmp	r0, #2
    624c:	d004      	beq.n	6258 <aplx_rcopy>
    624e:	2803      	cmp	r0, #3
    6250:	d00b      	beq.n	626a <aplx_fill>
    6252:	2804      	cmp	r0, #4
    6254:	d011      	beq.n	627a <aplx_exec>
    6256:	bdf2      	pop	{r1, r4, r5, r6, r7, pc}

00006258 <aplx_rcopy>:
    6258:	1912      	adds	r2, r2, r4
    625a:	3a10      	subs	r2, #16

0000625c <aplx_copy>:
    625c:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
    625e:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
    6260:	cae1      	ldmia	r2!, {r0, r5, r6, r7}
    6262:	c1e1      	stmia	r1!, {r0, r5, r6, r7}
    6264:	3b20      	subs	r3, #32
    6266:	d8f9      	bhi.n	625c <aplx_copy>
    6268:	e7ec      	b.n	6244 <aplx_loader>

0000626a <aplx_fill>:
    626a:	1c1d      	adds	r5, r3, #0
    626c:	1c1e      	adds	r6, r3, #0
    626e:	1c1f      	adds	r7, r3, #0

00006270 <aplx_l1>:
    6270:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
    6272:	c1e8      	stmia	r1!, {r3, r5, r6, r7}
    6274:	3a20      	subs	r2, #32
    6276:	d8fb      	bhi.n	6270 <aplx_l1>
    6278:	e7e4      	b.n	6244 <aplx_loader>

0000627a <aplx_exec>:
    627a:	9800      	ldr	r0, [sp, #0]
    627c:	4788      	blx	r1
    627e:	e7e1      	b.n	6244 <aplx_loader>

00006280 <dmaDoneHandler>:
    6280:	4770      	bx	lr

00006282 <timerHandler>:
    6282:	b510      	push	{r4, lr}
    6284:	4c07      	ldr	r4, [pc, #28]	; (62a4 <timerHandler+0x22>)
    6286:	1c02      	adds	r2, r0, #0
    6288:	6823      	ldr	r3, [r4, #0]
    628a:	2002      	movs	r0, #2
    628c:	3301      	adds	r3, #1
    628e:	4906      	ldr	r1, [pc, #24]	; (62a8 <timerHandler+0x26>)
    6290:	6023      	str	r3, [r4, #0]
    6292:	f000 ffff 	bl	7294 <io_printf>
    6296:	6821      	ldr	r1, [r4, #0]
    6298:	2200      	movs	r2, #0
    629a:	4b04      	ldr	r3, [pc, #16]	; (62ac <timerHandler+0x2a>)
    629c:	4804      	ldr	r0, [pc, #16]	; (62b0 <timerHandler+0x2e>)
    629e:	f000 fd3b 	bl	6d18 <timer_schedule_proc>
    62a2:	bd10      	pop	{r4, pc}
    62a4:	00400060 	.word	0x00400060
    62a8:	00007548 	.word	0x00007548
    62ac:	000f4240 	.word	0x000f4240
    62b0:	00006283 	.word	0x00006283

000062b4 <sdpHandler>:
    62b4:	b530      	push	{r4, r5, lr}
    62b6:	1c0d      	adds	r5, r1, #0
    62b8:	b085      	sub	sp, #20
    62ba:	1c01      	adds	r1, r0, #0
    62bc:	1c04      	adds	r4, r0, #0
    62be:	220c      	movs	r2, #12
    62c0:	3120      	adds	r1, #32
    62c2:	a801      	add	r0, sp, #4
    62c4:	f7ff ef1c 	blx	6100 <sark_mem_cpy>
    62c8:	4a16      	ldr	r2, [pc, #88]	; (6324 <sdpHandler+0x70>)
    62ca:	9b01      	ldr	r3, [sp, #4]
    62cc:	6013      	str	r3, [r2, #0]
    62ce:	9b02      	ldr	r3, [sp, #8]
    62d0:	6053      	str	r3, [r2, #4]
    62d2:	9b03      	ldr	r3, [sp, #12]
    62d4:	6093      	str	r3, [r2, #8]
    62d6:	4b14      	ldr	r3, [pc, #80]	; (6328 <sdpHandler+0x74>)
    62d8:	8a22      	ldrh	r2, [r4, #16]
    62da:	429a      	cmp	r2, r3
    62dc:	d11c      	bne.n	6318 <sdpHandler+0x64>
    62de:	2d07      	cmp	r5, #7
    62e0:	d11a      	bne.n	6318 <sdpHandler+0x64>
    62e2:	4b12      	ldr	r3, [pc, #72]	; (632c <sdpHandler+0x78>)
    62e4:	2002      	movs	r0, #2
    62e6:	681a      	ldr	r2, [r3, #0]
    62e8:	4911      	ldr	r1, [pc, #68]	; (6330 <sdpHandler+0x7c>)
    62ea:	1c2b      	adds	r3, r5, #0
    62ec:	f000 ffd2 	bl	7294 <io_printf>
    62f0:	8a62      	ldrh	r2, [r4, #18]
    62f2:	2002      	movs	r0, #2
    62f4:	490f      	ldr	r1, [pc, #60]	; (6334 <sdpHandler+0x80>)
    62f6:	f000 ffcd 	bl	7294 <io_printf>
    62fa:	2002      	movs	r0, #2
    62fc:	490e      	ldr	r1, [pc, #56]	; (6338 <sdpHandler+0x84>)
    62fe:	9a01      	ldr	r2, [sp, #4]
    6300:	f000 ffc8 	bl	7294 <io_printf>
    6304:	2002      	movs	r0, #2
    6306:	490d      	ldr	r1, [pc, #52]	; (633c <sdpHandler+0x88>)
    6308:	9a02      	ldr	r2, [sp, #8]
    630a:	f000 ffc3 	bl	7294 <io_printf>
    630e:	9a03      	ldr	r2, [sp, #12]
    6310:	2002      	movs	r0, #2
    6312:	490b      	ldr	r1, [pc, #44]	; (6340 <sdpHandler+0x8c>)
    6314:	f000 ffbe 	bl	7294 <io_printf>
    6318:	1c20      	adds	r0, r4, #0
    631a:	f000 f879 	bl	6410 <sark_msg_free>
    631e:	b005      	add	sp, #20
    6320:	bd30      	pop	{r4, r5, pc}
    6322:	46c0      	nop			; (mov r8, r8)
    6324:	00400000 	.word	0x00400000
    6328:	0000fa95 	.word	0x0000fa95
    632c:	0040005c 	.word	0x0040005c
    6330:	00007551 	.word	0x00007551
    6334:	00007579 	.word	0x00007579
    6338:	00007583 	.word	0x00007583
    633c:	00007599 	.word	0x00007599
    6340:	000075af 	.word	0x000075af

00006344 <c_main>:
    6344:	b508      	push	{r3, lr}
    6346:	f000 f82d 	bl	63a4 <sark_core_id>
    634a:	4b0e      	ldr	r3, [pc, #56]	; (6384 <c_main+0x40>)
    634c:	2200      	movs	r2, #0
    634e:	2105      	movs	r1, #5
    6350:	6018      	str	r0, [r3, #0]
    6352:	1c13      	adds	r3, r2, #0
    6354:	480c      	ldr	r0, [pc, #48]	; (6388 <c_main+0x44>)
    6356:	f000 fad1 	bl	68fc <event_register_queue>
    635a:	2201      	movs	r2, #1
    635c:	1c13      	adds	r3, r2, #0
    635e:	2102      	movs	r1, #2
    6360:	480a      	ldr	r0, [pc, #40]	; (638c <c_main+0x48>)
    6362:	f000 facb 	bl	68fc <event_register_queue>
    6366:	2002      	movs	r0, #2
    6368:	f000 fc76 	bl	6c58 <event_register_timer>
    636c:	2100      	movs	r1, #0
    636e:	1c0a      	adds	r2, r1, #0
    6370:	2302      	movs	r3, #2
    6372:	4807      	ldr	r0, [pc, #28]	; (6390 <c_main+0x4c>)
    6374:	f000 fbe4 	bl	6b40 <event_queue_proc>
    6378:	2000      	movs	r0, #0
    637a:	1c01      	adds	r1, r0, #0
    637c:	1c02      	adds	r2, r0, #0
    637e:	f000 fc07 	bl	6b90 <event_start>
    6382:	bd08      	pop	{r3, pc}
    6384:	0040005c 	.word	0x0040005c
    6388:	00006281 	.word	0x00006281
    638c:	000062b5 	.word	0x000062b5
    6390:	00006283 	.word	0x00006283

00006394 <schedule_sysmode>:
    6394:	4770      	bx	lr
	...

00006398 <rte_handler>:
    6398:	4b01      	ldr	r3, [pc, #4]	; (63a0 <rte_handler+0x8>)
    639a:	2208      	movs	r2, #8
    639c:	701a      	strb	r2, [r3, #0]
    639e:	4770      	bx	lr
    63a0:	e5007f2b 	.word	0xe5007f2b

000063a4 <sark_core_id>:
    63a4:	4b01      	ldr	r3, [pc, #4]	; (63ac <sark_core_id+0x8>)
    63a6:	6818      	ldr	r0, [r3, #0]
    63a8:	4770      	bx	lr
    63aa:	46c0      	nop			; (mov r8, r8)
    63ac:	00400068 	.word	0x00400068

000063b0 <sark_cpu_state>:
    63b0:	4b02      	ldr	r3, [pc, #8]	; (63bc <sark_cpu_state+0xc>)
    63b2:	69db      	ldr	r3, [r3, #28]
    63b4:	332e      	adds	r3, #46	; 0x2e
    63b6:	7018      	strb	r0, [r3, #0]
    63b8:	4770      	bx	lr
    63ba:	46c0      	nop			; (mov r8, r8)
    63bc:	00400068 	.word	0x00400068

000063c0 <sark_block_init>:
    63c0:	b530      	push	{r4, r5, lr}
    63c2:	1c0b      	adds	r3, r1, #0
    63c4:	1c04      	adds	r4, r0, #0
    63c6:	e002      	b.n	63ce <sark_block_init+0xe>
    63c8:	18a5      	adds	r5, r4, r2
    63ca:	6025      	str	r5, [r4, #0]
    63cc:	1c2c      	adds	r4, r5, #0
    63ce:	3b01      	subs	r3, #1
    63d0:	2b00      	cmp	r3, #0
    63d2:	d1f9      	bne.n	63c8 <sark_block_init+0x8>
    63d4:	3901      	subs	r1, #1
    63d6:	434a      	muls	r2, r1
    63d8:	1880      	adds	r0, r0, r2
    63da:	6003      	str	r3, [r0, #0]
    63dc:	bd30      	pop	{r4, r5, pc}
	...

000063e0 <sark_msg_get>:
    63e0:	b510      	push	{r4, lr}
    63e2:	f7ff ee62 	blx	60a8 <cpu_int_disable>
    63e6:	4b09      	ldr	r3, [pc, #36]	; (640c <sark_msg_get+0x2c>)
    63e8:	6a1c      	ldr	r4, [r3, #32]
    63ea:	2c00      	cmp	r4, #0
    63ec:	d00a      	beq.n	6404 <sark_msg_get+0x24>
    63ee:	6822      	ldr	r2, [r4, #0]
    63f0:	621a      	str	r2, [r3, #32]
    63f2:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
    63f4:	8cd9      	ldrh	r1, [r3, #38]	; 0x26
    63f6:	3201      	adds	r2, #1
    63f8:	0412      	lsls	r2, r2, #16
    63fa:	0c12      	lsrs	r2, r2, #16
    63fc:	849a      	strh	r2, [r3, #36]	; 0x24
    63fe:	4291      	cmp	r1, r2
    6400:	d200      	bcs.n	6404 <sark_msg_get+0x24>
    6402:	84da      	strh	r2, [r3, #38]	; 0x26
    6404:	f7ff ee58 	blx	60b8 <cpu_int_restore>
    6408:	1c20      	adds	r0, r4, #0
    640a:	bd10      	pop	{r4, pc}
    640c:	00400068 	.word	0x00400068

00006410 <sark_msg_free>:
    6410:	b510      	push	{r4, lr}
    6412:	1c04      	adds	r4, r0, #0
    6414:	f7ff ee48 	blx	60a8 <cpu_int_disable>
    6418:	4b04      	ldr	r3, [pc, #16]	; (642c <sark_msg_free+0x1c>)
    641a:	6a1a      	ldr	r2, [r3, #32]
    641c:	6022      	str	r2, [r4, #0]
    641e:	8c9a      	ldrh	r2, [r3, #36]	; 0x24
    6420:	621c      	str	r4, [r3, #32]
    6422:	3a01      	subs	r2, #1
    6424:	849a      	strh	r2, [r3, #36]	; 0x24
    6426:	f7ff ee48 	blx	60b8 <cpu_int_restore>
    642a:	bd10      	pop	{r4, pc}
    642c:	00400068 	.word	0x00400068

00006430 <sark_shmsg_get>:
    6430:	b510      	push	{r4, lr}
    6432:	2000      	movs	r0, #0
    6434:	f7ff ee48 	blx	60c8 <sark_lock_get>
    6438:	4b09      	ldr	r3, [pc, #36]	; (6460 <sark_shmsg_get+0x30>)
    643a:	681c      	ldr	r4, [r3, #0]
    643c:	2c00      	cmp	r4, #0
    643e:	d00a      	beq.n	6456 <sark_shmsg_get+0x26>
    6440:	6822      	ldr	r2, [r4, #0]
    6442:	601a      	str	r2, [r3, #0]
    6444:	889a      	ldrh	r2, [r3, #4]
    6446:	88d9      	ldrh	r1, [r3, #6]
    6448:	3201      	adds	r2, #1
    644a:	0412      	lsls	r2, r2, #16
    644c:	0c12      	lsrs	r2, r2, #16
    644e:	809a      	strh	r2, [r3, #4]
    6450:	4291      	cmp	r1, r2
    6452:	d200      	bcs.n	6456 <sark_shmsg_get+0x26>
    6454:	80da      	strh	r2, [r3, #6]
    6456:	2100      	movs	r1, #0
    6458:	f7ff ee48 	blx	60ec <sark_lock_free>
    645c:	1c20      	adds	r0, r4, #0
    645e:	bd10      	pop	{r4, pc}
    6460:	e5007f68 	.word	0xe5007f68

00006464 <sark_shmsg_free>:
    6464:	b510      	push	{r4, lr}
    6466:	1c04      	adds	r4, r0, #0
    6468:	2000      	movs	r0, #0
    646a:	f7ff ee2e 	blx	60c8 <sark_lock_get>
    646e:	4b05      	ldr	r3, [pc, #20]	; (6484 <sark_shmsg_free+0x20>)
    6470:	2100      	movs	r1, #0
    6472:	681a      	ldr	r2, [r3, #0]
    6474:	6022      	str	r2, [r4, #0]
    6476:	889a      	ldrh	r2, [r3, #4]
    6478:	601c      	str	r4, [r3, #0]
    647a:	3a01      	subs	r2, #1
    647c:	809a      	strh	r2, [r3, #4]
    647e:	f7ff ee36 	blx	60ec <sark_lock_free>
    6482:	bd10      	pop	{r4, pc}
    6484:	e5007f68 	.word	0xe5007f68

00006488 <sark_init>:
    6488:	b570      	push	{r4, r5, r6, lr}
    648a:	2520      	movs	r5, #32
    648c:	1c04      	adds	r4, r0, #0
    648e:	8c28      	ldrh	r0, [r5, #32]
    6490:	8c6a      	ldrh	r2, [r5, #34]	; 0x22
    6492:	0080      	lsls	r0, r0, #2
    6494:	1a20      	subs	r0, r4, r0
    6496:	21d2      	movs	r1, #210	; 0xd2
    6498:	f7ff edfa 	blx	6090 <cpu_init_mode>
    649c:	8caa      	ldrh	r2, [r5, #36]	; 0x24
    649e:	21d1      	movs	r1, #209	; 0xd1
    64a0:	f7ff edf6 	blx	6090 <cpu_init_mode>
    64a4:	2200      	movs	r2, #0
    64a6:	21df      	movs	r1, #223	; 0xdf
    64a8:	f7ff edf2 	blx	6090 <cpu_init_mode>
    64ac:	8ce9      	ldrh	r1, [r5, #38]	; 0x26
    64ae:	2658      	movs	r6, #88	; 0x58
    64b0:	0889      	lsrs	r1, r1, #2
    64b2:	0089      	lsls	r1, r1, #2
    64b4:	1a61      	subs	r1, r4, r1
    64b6:	4c2c      	ldr	r4, [pc, #176]	; (6568 <sark_init+0xe0>)
    64b8:	6121      	str	r1, [r4, #16]
    64ba:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    64bc:	6160      	str	r0, [r4, #20]
    64be:	f000 fde1 	bl	7084 <sark_heap_init>
    64c2:	4b2a      	ldr	r3, [pc, #168]	; (656c <sark_init+0xe4>)
    64c4:	4a2a      	ldr	r2, [pc, #168]	; (6570 <sark_init+0xe8>)
    64c6:	681b      	ldr	r3, [r3, #0]
    64c8:	4d2a      	ldr	r5, [pc, #168]	; (6574 <sark_init+0xec>)
    64ca:	0e1b      	lsrs	r3, r3, #24
    64cc:	6063      	str	r3, [r4, #4]
    64ce:	189b      	adds	r3, r3, r2
    64d0:	2192      	movs	r1, #146	; 0x92
    64d2:	0049      	lsls	r1, r1, #1
    64d4:	61a0      	str	r0, [r4, #24]
    64d6:	791b      	ldrb	r3, [r3, #4]
    64d8:	6023      	str	r3, [r4, #0]
    64da:	8cab      	ldrh	r3, [r5, #36]	; 0x24
    64dc:	8623      	strh	r3, [r4, #48]	; 0x30
    64de:	4b26      	ldr	r3, [pc, #152]	; (6578 <sark_init+0xf0>)
    64e0:	60a3      	str	r3, [r4, #8]
    64e2:	7830      	ldrb	r0, [r6, #0]
    64e4:	f000 fdc2 	bl	706c <sark_alloc>
    64e8:	2292      	movs	r2, #146	; 0x92
    64ea:	0052      	lsls	r2, r2, #1
    64ec:	6220      	str	r0, [r4, #32]
    64ee:	7831      	ldrb	r1, [r6, #0]
    64f0:	f7ff ff66 	bl	63c0 <sark_block_init>
    64f4:	6823      	ldr	r3, [r4, #0]
    64f6:	2b11      	cmp	r3, #17
    64f8:	d820      	bhi.n	653c <sark_init+0xb4>
    64fa:	4a20      	ldr	r2, [pc, #128]	; (657c <sark_init+0xf4>)
    64fc:	01d8      	lsls	r0, r3, #7
    64fe:	1880      	adds	r0, r0, r2
    6500:	6daa      	ldr	r2, [r5, #88]	; 0x58
    6502:	61e0      	str	r0, [r4, #28]
    6504:	4353      	muls	r3, r2
    6506:	6d6a      	ldr	r2, [r5, #84]	; 0x54
    6508:	009b      	lsls	r3, r3, #2
    650a:	18d3      	adds	r3, r2, r3
    650c:	2100      	movs	r1, #0
    650e:	2270      	movs	r2, #112	; 0x70
    6510:	6363      	str	r3, [r4, #52]	; 0x34
    6512:	f7ff ee0a 	blx	6128 <sark_word_set>
    6516:	69e0      	ldr	r0, [r4, #28]
    6518:	2205      	movs	r2, #5
    651a:	1c03      	adds	r3, r0, #0
    651c:	332e      	adds	r3, #46	; 0x2e
    651e:	701a      	strb	r2, [r3, #0]
    6520:	6862      	ldr	r2, [r4, #4]
    6522:	3b01      	subs	r3, #1
    6524:	701a      	strb	r2, [r3, #0]
    6526:	235c      	movs	r3, #92	; 0x5c
    6528:	781a      	ldrb	r2, [r3, #0]
    652a:	1c03      	adds	r3, r0, #0
    652c:	332f      	adds	r3, #47	; 0x2f
    652e:	701a      	strb	r2, [r3, #0]
    6530:	69ed      	ldr	r5, [r5, #28]
    6532:	6445      	str	r5, [r0, #68]	; 0x44
    6534:	4912      	ldr	r1, [pc, #72]	; (6580 <sark_init+0xf8>)
    6536:	3048      	adds	r0, #72	; 0x48
    6538:	f7ff edec 	blx	6114 <sark_str_cpy>
    653c:	f000 fc32 	bl	6da4 <sark_vic_init>
    6540:	2359      	movs	r3, #89	; 0x59
    6542:	7818      	ldrb	r0, [r3, #0]
    6544:	2112      	movs	r1, #18
    6546:	2201      	movs	r2, #1
    6548:	4b0e      	ldr	r3, [pc, #56]	; (6584 <sark_init+0xfc>)
    654a:	f000 fc53 	bl	6df4 <sark_vic_set>
    654e:	2106      	movs	r1, #6
    6550:	2201      	movs	r2, #1
    6552:	2010      	movs	r0, #16
    6554:	4b0c      	ldr	r3, [pc, #48]	; (6588 <sark_init+0x100>)
    6556:	f000 fc4d 	bl	6df4 <sark_vic_set>
    655a:	235a      	movs	r3, #90	; 0x5a
    655c:	7818      	ldrb	r0, [r3, #0]
    655e:	f000 faf9 	bl	6b54 <event_alloc>
    6562:	201f      	movs	r0, #31
    6564:	bd70      	pop	{r4, r5, r6, pc}
    6566:	46c0      	nop			; (mov r8, r8)
    6568:	00400068 	.word	0x00400068
    656c:	40000014 	.word	0x40000014
    6570:	e5007f90 	.word	0xe5007f90
    6574:	e5007f00 	.word	0xe5007f00
    6578:	deaddead 	.word	0xdeaddead
    657c:	e5007000 	.word	0xe5007000
    6580:	000075c8 	.word	0x000075c8
    6584:	000061e0 	.word	0x000061e0
    6588:	00006f7c 	.word	0x00006f7c

0000658c <sark_pre_main>:
    658c:	4b02      	ldr	r3, [pc, #8]	; (6598 <sark_pre_main+0xc>)
    658e:	2206      	movs	r2, #6
    6590:	69db      	ldr	r3, [r3, #28]
    6592:	332e      	adds	r3, #46	; 0x2e
    6594:	701a      	strb	r2, [r3, #0]
    6596:	4770      	bx	lr
    6598:	00400068 	.word	0x00400068

0000659c <sark_post_main>:
    659c:	4b02      	ldr	r3, [pc, #8]	; (65a8 <sark_post_main+0xc>)
    659e:	220b      	movs	r2, #11
    65a0:	69db      	ldr	r3, [r3, #28]
    65a2:	332e      	adds	r3, #46	; 0x2e
    65a4:	701a      	strb	r2, [r3, #0]
    65a6:	4770      	bx	lr
    65a8:	00400068 	.word	0x00400068

000065ac <sark_msg_send>:
    65ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    65ae:	1c05      	adds	r5, r0, #0
    65b0:	1c0f      	adds	r7, r1, #0
    65b2:	f7ff ff3d 	bl	6430 <sark_shmsg_get>
    65b6:	1c04      	adds	r4, r0, #0
    65b8:	3800      	subs	r0, #0
    65ba:	d03d      	beq.n	6638 <sark_msg_send+0x8c>
    65bc:	1c29      	adds	r1, r5, #0
    65be:	f7ff edc6 	blx	614c <sark_msg_cpy>
    65c2:	4e1e      	ldr	r6, [pc, #120]	; (663c <sark_msg_send+0x90>)
    65c4:	2501      	movs	r5, #1
    65c6:	69f3      	ldr	r3, [r6, #28]
    65c8:	1c28      	adds	r0, r5, #0
    65ca:	635c      	str	r4, [r3, #52]	; 0x34
    65cc:	3339      	adds	r3, #57	; 0x39
    65ce:	701d      	strb	r5, [r3, #0]
    65d0:	f7ff ed7a 	blx	60c8 <sark_lock_get>
    65d4:	6831      	ldr	r1, [r6, #0]
    65d6:	4a1a      	ldr	r2, [pc, #104]	; (6640 <sark_msg_send+0x94>)
    65d8:	1c2e      	adds	r6, r5, #0
    65da:	6813      	ldr	r3, [r2, #0]
    65dc:	408e      	lsls	r6, r1
    65de:	1c31      	adds	r1, r6, #0
    65e0:	4319      	orrs	r1, r3
    65e2:	6011      	str	r1, [r2, #0]
    65e4:	2b00      	cmp	r3, #0
    65e6:	d106      	bne.n	65f6 <sark_msg_send+0x4a>
    65e8:	4b16      	ldr	r3, [pc, #88]	; (6644 <sark_msg_send+0x98>)
    65ea:	4a17      	ldr	r2, [pc, #92]	; (6648 <sark_msg_send+0x9c>)
    65ec:	781b      	ldrb	r3, [r3, #0]
    65ee:	409d      	lsls	r5, r3
    65f0:	4b16      	ldr	r3, [pc, #88]	; (664c <sark_msg_send+0xa0>)
    65f2:	18ad      	adds	r5, r5, r2
    65f4:	601d      	str	r5, [r3, #0]
    65f6:	2101      	movs	r1, #1
    65f8:	f7ff ed78 	blx	60ec <sark_lock_free>
    65fc:	4b0f      	ldr	r3, [pc, #60]	; (663c <sark_msg_send+0x90>)
    65fe:	4a14      	ldr	r2, [pc, #80]	; (6650 <sark_msg_send+0xa4>)
    6600:	69db      	ldr	r3, [r3, #28]
    6602:	6815      	ldr	r5, [r2, #0]
    6604:	1c18      	adds	r0, r3, #0
    6606:	3039      	adds	r0, #57	; 0x39
    6608:	e008      	b.n	661c <sark_msg_send+0x70>
    660a:	6811      	ldr	r1, [r2, #0]
    660c:	1b49      	subs	r1, r1, r5
    660e:	42b9      	cmp	r1, r7
    6610:	d904      	bls.n	661c <sark_msg_send+0x70>
    6612:	3339      	adds	r3, #57	; 0x39
    6614:	781b      	ldrb	r3, [r3, #0]
    6616:	2b00      	cmp	r3, #0
    6618:	d009      	beq.n	662e <sark_msg_send+0x82>
    661a:	e003      	b.n	6624 <sark_msg_send+0x78>
    661c:	7801      	ldrb	r1, [r0, #0]
    661e:	2900      	cmp	r1, #0
    6620:	d1f3      	bne.n	660a <sark_msg_send+0x5e>
    6622:	e7f6      	b.n	6612 <sark_msg_send+0x66>
    6624:	1c20      	adds	r0, r4, #0
    6626:	f7ff ff1d 	bl	6464 <sark_shmsg_free>
    662a:	2000      	movs	r0, #0
    662c:	e004      	b.n	6638 <sark_msg_send+0x8c>
    662e:	4b03      	ldr	r3, [pc, #12]	; (663c <sark_msg_send+0x90>)
    6630:	2001      	movs	r0, #1
    6632:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    6634:	3201      	adds	r2, #1
    6636:	62da      	str	r2, [r3, #44]	; 0x2c
    6638:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    663a:	46c0      	nop			; (mov r8, r8)
    663c:	00400068 	.word	0x00400068
    6640:	e5007fec 	.word	0xe5007fec
    6644:	e5007fa8 	.word	0xe5007fa8
    6648:	5ec00000 	.word	0x5ec00000
    664c:	e2000008 	.word	0xe2000008
    6650:	e5007f10 	.word	0xe5007f10

00006654 <sark_cmd_ver>:
    6654:	b508      	push	{r3, lr}
    6656:	4b0a      	ldr	r3, [pc, #40]	; (6680 <sark_cmd_ver+0x2c>)
    6658:	6859      	ldr	r1, [r3, #4]
    665a:	681b      	ldr	r3, [r3, #0]
    665c:	020a      	lsls	r2, r1, #8
    665e:	18d3      	adds	r3, r2, r3
    6660:	4a08      	ldr	r2, [pc, #32]	; (6684 <sark_cmd_ver+0x30>)
    6662:	4909      	ldr	r1, [pc, #36]	; (6688 <sark_cmd_ver+0x34>)
    6664:	8812      	ldrh	r2, [r2, #0]
    6666:	0412      	lsls	r2, r2, #16
    6668:	189b      	adds	r3, r3, r2
    666a:	6143      	str	r3, [r0, #20]
    666c:	4b07      	ldr	r3, [pc, #28]	; (668c <sark_cmd_ver+0x38>)
    666e:	6183      	str	r3, [r0, #24]
    6670:	4b07      	ldr	r3, [pc, #28]	; (6690 <sark_cmd_ver+0x3c>)
    6672:	681b      	ldr	r3, [r3, #0]
    6674:	61c3      	str	r3, [r0, #28]
    6676:	3020      	adds	r0, #32
    6678:	f7ff ed4c 	blx	6114 <sark_str_cpy>
    667c:	201b      	movs	r0, #27
    667e:	bd08      	pop	{r3, pc}
    6680:	00400068 	.word	0x00400068
    6684:	e5007f00 	.word	0xe5007f00
    6688:	000075d4 	.word	0x000075d4
    668c:	00860100 	.word	0x00860100
    6690:	000075d0 	.word	0x000075d0

00006694 <sark_cmd_read>:
    6694:	69c1      	ldr	r1, [r0, #28]
    6696:	b530      	push	{r4, r5, lr}
    6698:	6983      	ldr	r3, [r0, #24]
    669a:	2902      	cmp	r1, #2
    669c:	d803      	bhi.n	66a6 <sark_cmd_read+0x12>
    669e:	2280      	movs	r2, #128	; 0x80
    66a0:	0052      	lsls	r2, r2, #1
    66a2:	429a      	cmp	r2, r3
    66a4:	d203      	bcs.n	66ae <sark_cmd_read+0x1a>
    66a6:	2384      	movs	r3, #132	; 0x84
    66a8:	8203      	strh	r3, [r0, #16]
    66aa:	2300      	movs	r3, #0
    66ac:	e023      	b.n	66f6 <sark_cmd_read+0x62>
    66ae:	6942      	ldr	r2, [r0, #20]
    66b0:	3014      	adds	r0, #20
    66b2:	2900      	cmp	r1, #0
    66b4:	d108      	bne.n	66c8 <sark_cmd_read+0x34>
    66b6:	18d1      	adds	r1, r2, r3
    66b8:	1a80      	subs	r0, r0, r2
    66ba:	e002      	b.n	66c2 <sark_cmd_read+0x2e>
    66bc:	7814      	ldrb	r4, [r2, #0]
    66be:	5484      	strb	r4, [r0, r2]
    66c0:	3201      	adds	r2, #1
    66c2:	428a      	cmp	r2, r1
    66c4:	d1fa      	bne.n	66bc <sark_cmd_read+0x28>
    66c6:	e016      	b.n	66f6 <sark_cmd_read+0x62>
    66c8:	2901      	cmp	r1, #1
    66ca:	d10a      	bne.n	66e2 <sark_cmd_read+0x4e>
    66cc:	0859      	lsrs	r1, r3, #1
    66ce:	0049      	lsls	r1, r1, #1
    66d0:	1889      	adds	r1, r1, r2
    66d2:	1a80      	subs	r0, r0, r2
    66d4:	e002      	b.n	66dc <sark_cmd_read+0x48>
    66d6:	8814      	ldrh	r4, [r2, #0]
    66d8:	5284      	strh	r4, [r0, r2]
    66da:	3202      	adds	r2, #2
    66dc:	428a      	cmp	r2, r1
    66de:	d1fa      	bne.n	66d6 <sark_cmd_read+0x42>
    66e0:	e009      	b.n	66f6 <sark_cmd_read+0x62>
    66e2:	089c      	lsrs	r4, r3, #2
    66e4:	00a4      	lsls	r4, r4, #2
    66e6:	1904      	adds	r4, r0, r4
    66e8:	1c01      	adds	r1, r0, #0
    66ea:	e002      	b.n	66f2 <sark_cmd_read+0x5e>
    66ec:	1a0d      	subs	r5, r1, r0
    66ee:	58ad      	ldr	r5, [r5, r2]
    66f0:	c120      	stmia	r1!, {r5}
    66f2:	42a1      	cmp	r1, r4
    66f4:	d1fa      	bne.n	66ec <sark_cmd_read+0x58>
    66f6:	1c18      	adds	r0, r3, #0
    66f8:	bd30      	pop	{r4, r5, pc}

000066fa <sark_cmd_write>:
    66fa:	69c1      	ldr	r1, [r0, #28]
    66fc:	b530      	push	{r4, r5, lr}
    66fe:	6982      	ldr	r2, [r0, #24]
    6700:	2902      	cmp	r1, #2
    6702:	d803      	bhi.n	670c <sark_cmd_write+0x12>
    6704:	2380      	movs	r3, #128	; 0x80
    6706:	005b      	lsls	r3, r3, #1
    6708:	4293      	cmp	r3, r2
    670a:	d202      	bcs.n	6712 <sark_cmd_write+0x18>
    670c:	2384      	movs	r3, #132	; 0x84
    670e:	8203      	strh	r3, [r0, #16]
    6710:	e026      	b.n	6760 <sark_cmd_write+0x66>
    6712:	6943      	ldr	r3, [r0, #20]
    6714:	2900      	cmp	r1, #0
    6716:	d10b      	bne.n	6730 <sark_cmd_write+0x36>
    6718:	1881      	adds	r1, r0, r2
    671a:	1c02      	adds	r2, r0, #0
    671c:	e005      	b.n	672a <sark_cmd_write+0x30>
    671e:	1c14      	adds	r4, r2, #0
    6720:	3420      	adds	r4, #32
    6722:	7825      	ldrb	r5, [r4, #0]
    6724:	1a14      	subs	r4, r2, r0
    6726:	3201      	adds	r2, #1
    6728:	54e5      	strb	r5, [r4, r3]
    672a:	428a      	cmp	r2, r1
    672c:	d1f7      	bne.n	671e <sark_cmd_write+0x24>
    672e:	e017      	b.n	6760 <sark_cmd_write+0x66>
    6730:	3020      	adds	r0, #32
    6732:	2901      	cmp	r1, #1
    6734:	d10b      	bne.n	674e <sark_cmd_write+0x54>
    6736:	0851      	lsrs	r1, r2, #1
    6738:	0049      	lsls	r1, r1, #1
    673a:	1841      	adds	r1, r0, r1
    673c:	1c02      	adds	r2, r0, #0
    673e:	e003      	b.n	6748 <sark_cmd_write+0x4e>
    6740:	8815      	ldrh	r5, [r2, #0]
    6742:	1a14      	subs	r4, r2, r0
    6744:	3202      	adds	r2, #2
    6746:	52e5      	strh	r5, [r4, r3]
    6748:	428a      	cmp	r2, r1
    674a:	d1f9      	bne.n	6740 <sark_cmd_write+0x46>
    674c:	e008      	b.n	6760 <sark_cmd_write+0x66>
    674e:	0892      	lsrs	r2, r2, #2
    6750:	0092      	lsls	r2, r2, #2
    6752:	18d2      	adds	r2, r2, r3
    6754:	1ac0      	subs	r0, r0, r3
    6756:	e001      	b.n	675c <sark_cmd_write+0x62>
    6758:	58c1      	ldr	r1, [r0, r3]
    675a:	c302      	stmia	r3!, {r1}
    675c:	4293      	cmp	r3, r2
    675e:	d1fb      	bne.n	6758 <sark_cmd_write+0x5e>
    6760:	2000      	movs	r0, #0
    6762:	bd30      	pop	{r4, r5, pc}

00006764 <sark_cmd_fill>:
    6764:	b508      	push	{r3, lr}
    6766:	1c03      	adds	r3, r0, #0
    6768:	3314      	adds	r3, #20
    676a:	cb07      	ldmia	r3!, {r0, r1, r2}
    676c:	f7ff ecdc 	blx	6128 <sark_word_set>
    6770:	2000      	movs	r0, #0
    6772:	bd08      	pop	{r3, pc}

00006774 <sark_wait>:
    6774:	b508      	push	{r3, lr}
    6776:	e001      	b.n	677c <sark_wait+0x8>
    6778:	f7ff eca2 	blx	60c0 <cpu_wfi>
    677c:	235d      	movs	r3, #93	; 0x5d
    677e:	781b      	ldrb	r3, [r3, #0]
    6780:	07da      	lsls	r2, r3, #31
    6782:	d4f9      	bmi.n	6778 <sark_wait+0x4>
    6784:	bd08      	pop	{r3, pc}
	...

00006788 <sark_int>:
    6788:	4b55      	ldr	r3, [pc, #340]	; (68e0 <sark_int+0x158>)
    678a:	2101      	movs	r1, #1
    678c:	685a      	ldr	r2, [r3, #4]
    678e:	b570      	push	{r4, r5, r6, lr}
    6790:	4091      	lsls	r1, r2
    6792:	4a54      	ldr	r2, [pc, #336]	; (68e4 <sark_int+0x15c>)
    6794:	1889      	adds	r1, r1, r2
    6796:	4a54      	ldr	r2, [pc, #336]	; (68e8 <sark_int+0x160>)
    6798:	6011      	str	r1, [r2, #0]
    679a:	69da      	ldr	r2, [r3, #28]
    679c:	1c11      	adds	r1, r2, #0
    679e:	3138      	adds	r1, #56	; 0x38
    67a0:	780b      	ldrb	r3, [r1, #0]
    67a2:	2b00      	cmp	r3, #0
    67a4:	d100      	bne.n	67a8 <sark_int+0x20>
    67a6:	e099      	b.n	68dc <sark_int+0x154>
    67a8:	6b15      	ldr	r5, [r2, #48]	; 0x30
    67aa:	2b02      	cmp	r3, #2
    67ac:	d100      	bne.n	67b0 <sark_int+0x28>
    67ae:	6310      	str	r0, [r2, #48]	; 0x30
    67b0:	2200      	movs	r2, #0
    67b2:	700a      	strb	r2, [r1, #0]
    67b4:	2b03      	cmp	r3, #3
    67b6:	d124      	bne.n	6802 <sark_int+0x7a>
    67b8:	1ee8      	subs	r0, r5, #3
    67ba:	280a      	cmp	r0, #10
    67bc:	d900      	bls.n	67c0 <sark_int+0x38>
    67be:	e08d      	b.n	68dc <sark_int+0x154>
    67c0:	f7ff fd2a 	bl	6218 <__gnu_thumb1_case_uqi>
    67c4:	068c8c10 	.word	0x068c8c10
    67c8:	161b0c08 	.word	0x161b0c08
    67cc:	1616      	.short	0x1616
    67ce:	16          	.byte	0x16
    67cf:	00          	.byte	0x00
    67d0:	2001      	movs	r0, #1
    67d2:	e000      	b.n	67d6 <sark_int+0x4e>
    67d4:	2000      	movs	r0, #0
    67d6:	f000 f90d 	bl	69f4 <event_pause>
    67da:	e07f      	b.n	68dc <sark_int+0x154>
    67dc:	20ff      	movs	r0, #255	; 0xff
    67de:	f000 f91f 	bl	6a20 <event_stop>
    67e2:	e07b      	b.n	68dc <sark_int+0x154>
    67e4:	235d      	movs	r3, #93	; 0x5d
    67e6:	781a      	ldrb	r2, [r3, #0]
    67e8:	2101      	movs	r1, #1
    67ea:	438a      	bics	r2, r1
    67ec:	701a      	strb	r2, [r3, #0]
    67ee:	e075      	b.n	68dc <sark_int+0x154>
    67f0:	4b3e      	ldr	r3, [pc, #248]	; (68ec <sark_int+0x164>)
    67f2:	2280      	movs	r2, #128	; 0x80
    67f4:	62dd      	str	r5, [r3, #44]	; 0x2c
    67f6:	0592      	lsls	r2, r2, #22
    67f8:	e000      	b.n	67fc <sark_int+0x74>
    67fa:	2210      	movs	r2, #16
    67fc:	4b3c      	ldr	r3, [pc, #240]	; (68f0 <sark_int+0x168>)
    67fe:	601a      	str	r2, [r3, #0]
    6800:	e06c      	b.n	68dc <sark_int+0x154>
    6802:	2b01      	cmp	r3, #1
    6804:	d16a      	bne.n	68dc <sark_int+0x154>
    6806:	f7ff fdeb 	bl	63e0 <sark_msg_get>
    680a:	1e04      	subs	r4, r0, #0
    680c:	d063      	beq.n	68d6 <sark_int+0x14e>
    680e:	1c29      	adds	r1, r5, #0
    6810:	1c20      	adds	r0, r4, #0
    6812:	f7ff ec9c 	blx	614c <sark_msg_cpy>
    6816:	1c28      	adds	r0, r5, #0
    6818:	f7ff fe24 	bl	6464 <sark_shmsg_free>
    681c:	4b30      	ldr	r3, [pc, #192]	; (68e0 <sark_int+0x158>)
    681e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    6820:	3201      	adds	r2, #1
    6822:	629a      	str	r2, [r3, #40]	; 0x28
    6824:	7aa5      	ldrb	r5, [r4, #10]
    6826:	231f      	movs	r3, #31
    6828:	1c28      	adds	r0, r5, #0
    682a:	4398      	bics	r0, r3
    682c:	d130      	bne.n	6890 <sark_int+0x108>
    682e:	88a3      	ldrh	r3, [r4, #4]
    6830:	2b17      	cmp	r3, #23
    6832:	d801      	bhi.n	6838 <sark_int+0xb0>
    6834:	2381      	movs	r3, #129	; 0x81
    6836:	e01b      	b.n	6870 <sark_int+0xe8>
    6838:	8a23      	ldrh	r3, [r4, #16]
    683a:	2280      	movs	r2, #128	; 0x80
    683c:	8222      	strh	r2, [r4, #16]
    683e:	2b00      	cmp	r3, #0
    6840:	d103      	bne.n	684a <sark_int+0xc2>
    6842:	1c20      	adds	r0, r4, #0
    6844:	f7ff ff06 	bl	6654 <sark_cmd_ver>
    6848:	e013      	b.n	6872 <sark_int+0xea>
    684a:	2b02      	cmp	r3, #2
    684c:	d103      	bne.n	6856 <sark_int+0xce>
    684e:	1c20      	adds	r0, r4, #0
    6850:	f7ff ff20 	bl	6694 <sark_cmd_read>
    6854:	e00d      	b.n	6872 <sark_int+0xea>
    6856:	2b03      	cmp	r3, #3
    6858:	d103      	bne.n	6862 <sark_int+0xda>
    685a:	1c20      	adds	r0, r4, #0
    685c:	f7ff ff4d 	bl	66fa <sark_cmd_write>
    6860:	e007      	b.n	6872 <sark_int+0xea>
    6862:	2b05      	cmp	r3, #5
    6864:	d103      	bne.n	686e <sark_int+0xe6>
    6866:	1c20      	adds	r0, r4, #0
    6868:	f7ff ff7c 	bl	6764 <sark_cmd_fill>
    686c:	e001      	b.n	6872 <sark_int+0xea>
    686e:	2383      	movs	r3, #131	; 0x83
    6870:	8223      	strh	r3, [r4, #16]
    6872:	7aa2      	ldrb	r2, [r4, #10]
    6874:	7ae1      	ldrb	r1, [r4, #11]
    6876:	89a3      	ldrh	r3, [r4, #12]
    6878:	300c      	adds	r0, #12
    687a:	72e2      	strb	r2, [r4, #11]
    687c:	89e2      	ldrh	r2, [r4, #14]
    687e:	80a0      	strh	r0, [r4, #4]
    6880:	72a1      	strb	r1, [r4, #10]
    6882:	81a2      	strh	r2, [r4, #12]
    6884:	81e3      	strh	r3, [r4, #14]
    6886:	1c20      	adds	r0, r4, #0
    6888:	210a      	movs	r1, #10
    688a:	f7ff fe8f 	bl	65ac <sark_msg_send>
    688e:	e01e      	b.n	68ce <sark_int+0x146>
    6890:	235b      	movs	r3, #91	; 0x5b
    6892:	781b      	ldrb	r3, [r3, #0]
    6894:	2b00      	cmp	r3, #0
    6896:	d00f      	beq.n	68b8 <sark_int+0x130>
    6898:	4b16      	ldr	r3, [pc, #88]	; (68f4 <sark_int+0x16c>)
    689a:	699b      	ldr	r3, [r3, #24]
    689c:	2b00      	cmp	r3, #0
    689e:	d016      	beq.n	68ce <sark_int+0x146>
    68a0:	f7ff ec02 	blx	60a8 <cpu_int_disable>
    68a4:	096a      	lsrs	r2, r5, #5
    68a6:	1c21      	adds	r1, r4, #0
    68a8:	1c06      	adds	r6, r0, #0
    68aa:	2003      	movs	r0, #3
    68ac:	f7ff fd72 	bl	6394 <schedule_sysmode>
    68b0:	1c30      	adds	r0, r6, #0
    68b2:	f7ff ec02 	blx	60b8 <cpu_int_restore>
    68b6:	e011      	b.n	68dc <sark_int+0x154>
    68b8:	4b0f      	ldr	r3, [pc, #60]	; (68f8 <sark_int+0x170>)
    68ba:	681a      	ldr	r2, [r3, #0]
    68bc:	2380      	movs	r3, #128	; 0x80
    68be:	055b      	lsls	r3, r3, #21
    68c0:	421a      	tst	r2, r3
    68c2:	d004      	beq.n	68ce <sark_int+0x146>
    68c4:	4a09      	ldr	r2, [pc, #36]	; (68ec <sark_int+0x164>)
    68c6:	6294      	str	r4, [r2, #40]	; 0x28
    68c8:	4a09      	ldr	r2, [pc, #36]	; (68f0 <sark_int+0x168>)
    68ca:	6013      	str	r3, [r2, #0]
    68cc:	e006      	b.n	68dc <sark_int+0x154>
    68ce:	1c20      	adds	r0, r4, #0
    68d0:	f7ff fd9e 	bl	6410 <sark_msg_free>
    68d4:	e002      	b.n	68dc <sark_int+0x154>
    68d6:	1c28      	adds	r0, r5, #0
    68d8:	f7ff fdc4 	bl	6464 <sark_shmsg_free>
    68dc:	bd70      	pop	{r4, r5, r6, pc}
    68de:	46c0      	nop			; (mov r8, r8)
    68e0:	00400068 	.word	0x00400068
    68e4:	5ec00000 	.word	0x5ec00000
    68e8:	e200000c 	.word	0xe200000c
    68ec:	004000a4 	.word	0x004000a4
    68f0:	1f000018 	.word	0x1f000018
    68f4:	0040000c 	.word	0x0040000c
    68f8:	1f000010 	.word	0x1f000010

000068fc <event_register_queue>:
    68fc:	b5f0      	push	{r4, r5, r6, r7, lr}
    68fe:	b085      	sub	sp, #20
    6900:	9003      	str	r0, [sp, #12]
    6902:	4820      	ldr	r0, [pc, #128]	; (6984 <event_register_queue+0x88>)
    6904:	9300      	str	r3, [sp, #0]
    6906:	5c40      	ldrb	r0, [r0, r1]
    6908:	9001      	str	r0, [sp, #4]
    690a:	2a0f      	cmp	r2, #15
    690c:	d812      	bhi.n	6934 <event_register_queue+0x38>
    690e:	2905      	cmp	r1, #5
    6910:	d810      	bhi.n	6934 <event_register_queue+0x38>
    6912:	2b03      	cmp	r3, #3
    6914:	d80e      	bhi.n	6934 <event_register_queue+0x38>
    6916:	9b01      	ldr	r3, [sp, #4]
    6918:	2001      	movs	r0, #1
    691a:	4098      	lsls	r0, r3
    691c:	9002      	str	r0, [sp, #8]
    691e:	481a      	ldr	r0, [pc, #104]	; (6988 <event_register_queue+0x8c>)
    6920:	9d02      	ldr	r5, [sp, #8]
    6922:	6cc4      	ldr	r4, [r0, #76]	; 0x4c
    6924:	422c      	tst	r4, r5
    6926:	d105      	bne.n	6934 <event_register_queue+0x38>
    6928:	4f18      	ldr	r7, [pc, #96]	; (698c <event_register_queue+0x90>)
    692a:	0096      	lsls	r6, r2, #2
    692c:	19f6      	adds	r6, r6, r7
    692e:	6834      	ldr	r4, [r6, #0]
    6930:	2c00      	cmp	r4, #0
    6932:	d005      	beq.n	6940 <event_register_queue+0x44>
    6934:	4b14      	ldr	r3, [pc, #80]	; (6988 <event_register_queue+0x8c>)
    6936:	2204      	movs	r2, #4
    6938:	6959      	ldr	r1, [r3, #20]
    693a:	430a      	orrs	r2, r1
    693c:	615a      	str	r2, [r3, #20]
    693e:	e01f      	b.n	6980 <event_register_queue+0x84>
    6940:	4b13      	ldr	r3, [pc, #76]	; (6990 <event_register_queue+0x94>)
    6942:	0094      	lsls	r4, r2, #2
    6944:	191b      	adds	r3, r3, r4
    6946:	4c13      	ldr	r4, [pc, #76]	; (6994 <event_register_queue+0x98>)
    6948:	008d      	lsls	r5, r1, #2
    694a:	592f      	ldr	r7, [r5, r4]
    694c:	601f      	str	r7, [r3, #0]
    694e:	9f01      	ldr	r7, [sp, #4]
    6950:	2320      	movs	r3, #32
    6952:	431f      	orrs	r7, r3
    6954:	6037      	str	r7, [r6, #0]
    6956:	1c0e      	adds	r6, r1, #0
    6958:	469c      	mov	ip, r3
    695a:	3610      	adds	r6, #16
    695c:	230c      	movs	r3, #12
    695e:	466f      	mov	r7, sp
    6960:	5bdf      	ldrh	r7, [r3, r7]
    6962:	00b6      	lsls	r6, r6, #2
    6964:	8437      	strh	r7, [r6, #32]
    6966:	4466      	add	r6, ip
    6968:	70b2      	strb	r2, [r6, #2]
    696a:	466a      	mov	r2, sp
    696c:	7812      	ldrb	r2, [r2, #0]
    696e:	70f2      	strb	r2, [r6, #3]
    6970:	9b02      	ldr	r3, [sp, #8]
    6972:	592d      	ldr	r5, [r5, r4]
    6974:	6cc4      	ldr	r4, [r0, #76]	; 0x4c
    6976:	3118      	adds	r1, #24
    6978:	0089      	lsls	r1, r1, #2
    697a:	4323      	orrs	r3, r4
    697c:	500d      	str	r5, [r1, r0]
    697e:	64c3      	str	r3, [r0, #76]	; 0x4c
    6980:	b005      	add	sp, #20
    6982:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6984:	000075e3 	.word	0x000075e3
    6988:	004000a4 	.word	0x004000a4
    698c:	1f000200 	.word	0x1f000200
    6990:	1f000100 	.word	0x1f000100
    6994:	000075ec 	.word	0x000075ec

00006998 <event_wait>:
    6998:	4b13      	ldr	r3, [pc, #76]	; (69e8 <event_wait+0x50>)
    699a:	b570      	push	{r4, r5, r6, lr}
    699c:	681b      	ldr	r3, [r3, #0]
    699e:	4c13      	ldr	r4, [pc, #76]	; (69ec <event_wait+0x54>)
    69a0:	2501      	movs	r5, #1
    69a2:	409d      	lsls	r5, r3
    69a4:	7ea3      	ldrb	r3, [r4, #26]
    69a6:	4e12      	ldr	r6, [pc, #72]	; (69f0 <event_wait+0x58>)
    69a8:	2b00      	cmp	r3, #0
    69aa:	d012      	beq.n	69d2 <event_wait+0x3a>
    69ac:	2009      	movs	r0, #9
    69ae:	f7ff fcff 	bl	63b0 <sark_cpu_state>
    69b2:	e001      	b.n	69b8 <event_wait+0x20>
    69b4:	f7ff eb84 	blx	60c0 <cpu_wfi>
    69b8:	6833      	ldr	r3, [r6, #0]
    69ba:	1c2a      	adds	r2, r5, #0
    69bc:	439a      	bics	r2, r3
    69be:	1e13      	subs	r3, r2, #0
    69c0:	d1f8      	bne.n	69b4 <event_wait+0x1c>
    69c2:	7ea3      	ldrb	r3, [r4, #26]
    69c4:	2201      	movs	r2, #1
    69c6:	4053      	eors	r3, r2
    69c8:	2007      	movs	r0, #7
    69ca:	76a3      	strb	r3, [r4, #26]
    69cc:	f7ff fcf0 	bl	63b0 <sark_cpu_state>
    69d0:	e009      	b.n	69e6 <event_wait+0x4e>
    69d2:	2008      	movs	r0, #8
    69d4:	f7ff fcec 	bl	63b0 <sark_cpu_state>
    69d8:	e001      	b.n	69de <event_wait+0x46>
    69da:	f7ff eb72 	blx	60c0 <cpu_wfi>
    69de:	6833      	ldr	r3, [r6, #0]
    69e0:	422b      	tst	r3, r5
    69e2:	d1fa      	bne.n	69da <event_wait+0x42>
    69e4:	e7ed      	b.n	69c2 <event_wait+0x2a>
    69e6:	bd70      	pop	{r4, r5, r6, pc}
    69e8:	00400068 	.word	0x00400068
    69ec:	004000a4 	.word	0x004000a4
    69f0:	e2000058 	.word	0xe2000058

000069f4 <event_pause>:
    69f4:	b538      	push	{r3, r4, r5, lr}
    69f6:	1c05      	adds	r5, r0, #0
    69f8:	4c08      	ldr	r4, [pc, #32]	; (6a1c <event_pause+0x28>)
    69fa:	2800      	cmp	r0, #0
    69fc:	d003      	beq.n	6a06 <event_pause+0x12>
    69fe:	2301      	movs	r3, #1
    6a00:	7623      	strb	r3, [r4, #24]
    6a02:	200a      	movs	r0, #10
    6a04:	e001      	b.n	6a0a <event_pause+0x16>
    6a06:	7620      	strb	r0, [r4, #24]
    6a08:	2007      	movs	r0, #7
    6a0a:	f7ff fcd1 	bl	63b0 <sark_cpu_state>
    6a0e:	6b23      	ldr	r3, [r4, #48]	; 0x30
    6a10:	2b00      	cmp	r3, #0
    6a12:	d002      	beq.n	6a1a <event_pause+0x26>
    6a14:	6b61      	ldr	r1, [r4, #52]	; 0x34
    6a16:	1c28      	adds	r0, r5, #0
    6a18:	4798      	blx	r3
    6a1a:	bd38      	pop	{r3, r4, r5, pc}
    6a1c:	004000a4 	.word	0x004000a4

00006a20 <event_stop>:
    6a20:	4b03      	ldr	r3, [pc, #12]	; (6a30 <event_stop+0x10>)
    6a22:	2202      	movs	r2, #2
    6a24:	761a      	strb	r2, [r3, #24]
    6a26:	4a03      	ldr	r2, [pc, #12]	; (6a34 <event_stop+0x14>)
    6a28:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
    6a2a:	6011      	str	r1, [r2, #0]
    6a2c:	6398      	str	r0, [r3, #56]	; 0x38
    6a2e:	4770      	bx	lr
    6a30:	004000a4 	.word	0x004000a4
    6a34:	1f000014 	.word	0x1f000014

00006a38 <event_queue>:
    6a38:	b538      	push	{r3, r4, r5, lr}
    6a3a:	1c05      	adds	r5, r0, #0
    6a3c:	2000      	movs	r0, #0
    6a3e:	2903      	cmp	r1, #3
    6a40:	d812      	bhi.n	6a68 <event_queue+0x30>
    6a42:	1c0c      	adds	r4, r1, #0
    6a44:	4b09      	ldr	r3, [pc, #36]	; (6a6c <event_queue+0x34>)
    6a46:	340f      	adds	r4, #15
    6a48:	00e4      	lsls	r4, r4, #3
    6a4a:	18e4      	adds	r4, r4, r3
    6a4c:	f7ff eb2c 	blx	60a8 <cpu_int_disable>
    6a50:	6823      	ldr	r3, [r4, #0]
    6a52:	2b00      	cmp	r3, #0
    6a54:	d102      	bne.n	6a5c <event_queue+0x24>
    6a56:	6065      	str	r5, [r4, #4]
    6a58:	6025      	str	r5, [r4, #0]
    6a5a:	e002      	b.n	6a62 <event_queue+0x2a>
    6a5c:	6863      	ldr	r3, [r4, #4]
    6a5e:	601d      	str	r5, [r3, #0]
    6a60:	6065      	str	r5, [r4, #4]
    6a62:	f7ff eb2a 	blx	60b8 <cpu_int_restore>
    6a66:	2001      	movs	r0, #1
    6a68:	bd38      	pop	{r3, r4, r5, pc}
    6a6a:	46c0      	nop			; (mov r8, r8)
    6a6c:	004000a4 	.word	0x004000a4

00006a70 <event_run2>:
    6a70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    6a72:	2500      	movs	r5, #0
    6a74:	9001      	str	r0, [sp, #4]
    6a76:	e029      	b.n	6acc <event_run2+0x5c>
    6a78:	1c2f      	adds	r7, r5, #0
    6a7a:	370f      	adds	r7, #15
    6a7c:	00ff      	lsls	r7, r7, #3
    6a7e:	19bf      	adds	r7, r7, r6
    6a80:	f7ff eb12 	blx	60a8 <cpu_int_disable>
    6a84:	683c      	ldr	r4, [r7, #0]
    6a86:	2c00      	cmp	r4, #0
    6a88:	d105      	bne.n	6a96 <event_run2+0x26>
    6a8a:	3501      	adds	r5, #1
    6a8c:	062d      	lsls	r5, r5, #24
    6a8e:	f7ff eb14 	blx	60b8 <cpu_int_restore>
    6a92:	0e2d      	lsrs	r5, r5, #24
    6a94:	e016      	b.n	6ac4 <event_run2+0x54>
    6a96:	6823      	ldr	r3, [r4, #0]
    6a98:	603b      	str	r3, [r7, #0]
    6a9a:	f7ff eb0e 	blx	60b8 <cpu_int_restore>
    6a9e:	68e1      	ldr	r1, [r4, #12]
    6aa0:	6863      	ldr	r3, [r4, #4]
    6aa2:	68a0      	ldr	r0, [r4, #8]
    6aa4:	4798      	blx	r3
    6aa6:	f7ff eb00 	blx	60a8 <cpu_int_disable>
    6aaa:	6833      	ldr	r3, [r6, #0]
    6aac:	6023      	str	r3, [r4, #0]
    6aae:	9b00      	ldr	r3, [sp, #0]
    6ab0:	6163      	str	r3, [r4, #20]
    6ab2:	8933      	ldrh	r3, [r6, #8]
    6ab4:	6034      	str	r4, [r6, #0]
    6ab6:	3b01      	subs	r3, #1
    6ab8:	8133      	strh	r3, [r6, #8]
    6aba:	f7ff eafe 	blx	60b8 <cpu_int_restore>
    6abe:	9b01      	ldr	r3, [sp, #4]
    6ac0:	2b00      	cmp	r3, #0
    6ac2:	d102      	bne.n	6aca <event_run2+0x5a>
    6ac4:	2d03      	cmp	r5, #3
    6ac6:	d901      	bls.n	6acc <event_run2+0x5c>
    6ac8:	e005      	b.n	6ad6 <event_run2+0x66>
    6aca:	9d00      	ldr	r5, [sp, #0]
    6acc:	4e02      	ldr	r6, [pc, #8]	; (6ad8 <event_run2+0x68>)
    6ace:	7e33      	ldrb	r3, [r6, #24]
    6ad0:	9300      	str	r3, [sp, #0]
    6ad2:	2b00      	cmp	r3, #0
    6ad4:	d0d0      	beq.n	6a78 <event_run2+0x8>
    6ad6:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    6ad8:	004000a4 	.word	0x004000a4

00006adc <event_new>:
    6adc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6ade:	1c15      	adds	r5, r2, #0
    6ae0:	1c07      	adds	r7, r0, #0
    6ae2:	1c0e      	adds	r6, r1, #0
    6ae4:	f7ff eae0 	blx	60a8 <cpu_int_disable>
    6ae8:	4a14      	ldr	r2, [pc, #80]	; (6b3c <event_new+0x60>)
    6aea:	6814      	ldr	r4, [r2, #0]
    6aec:	1c13      	adds	r3, r2, #0
    6aee:	2c00      	cmp	r4, #0
    6af0:	d018      	beq.n	6b24 <event_new+0x48>
    6af2:	68d2      	ldr	r2, [r2, #12]
    6af4:	3201      	adds	r2, #1
    6af6:	2a00      	cmp	r2, #0
    6af8:	d100      	bne.n	6afc <event_new+0x20>
    6afa:	2201      	movs	r2, #1
    6afc:	6821      	ldr	r1, [r4, #0]
    6afe:	6019      	str	r1, [r3, #0]
    6b00:	2100      	movs	r1, #0
    6b02:	6021      	str	r1, [r4, #0]
    6b04:	6162      	str	r2, [r4, #20]
    6b06:	60da      	str	r2, [r3, #12]
    6b08:	6121      	str	r1, [r4, #16]
    6b0a:	6067      	str	r7, [r4, #4]
    6b0c:	60a6      	str	r6, [r4, #8]
    6b0e:	60e5      	str	r5, [r4, #12]
    6b10:	891a      	ldrh	r2, [r3, #8]
    6b12:	8959      	ldrh	r1, [r3, #10]
    6b14:	3201      	adds	r2, #1
    6b16:	0412      	lsls	r2, r2, #16
    6b18:	0c12      	lsrs	r2, r2, #16
    6b1a:	811a      	strh	r2, [r3, #8]
    6b1c:	4291      	cmp	r1, r2
    6b1e:	d208      	bcs.n	6b32 <event_new+0x56>
    6b20:	815a      	strh	r2, [r3, #10]
    6b22:	e006      	b.n	6b32 <event_new+0x56>
    6b24:	6913      	ldr	r3, [r2, #16]
    6b26:	6951      	ldr	r1, [r2, #20]
    6b28:	3301      	adds	r3, #1
    6b2a:	6113      	str	r3, [r2, #16]
    6b2c:	2310      	movs	r3, #16
    6b2e:	430b      	orrs	r3, r1
    6b30:	6153      	str	r3, [r2, #20]
    6b32:	f7ff eac2 	blx	60b8 <cpu_int_restore>
    6b36:	1c20      	adds	r0, r4, #0
    6b38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6b3a:	46c0      	nop			; (mov r8, r8)
    6b3c:	004000a4 	.word	0x004000a4

00006b40 <event_queue_proc>:
    6b40:	b510      	push	{r4, lr}
    6b42:	1c1c      	adds	r4, r3, #0
    6b44:	f7ff ffca 	bl	6adc <event_new>
    6b48:	2800      	cmp	r0, #0
    6b4a:	d002      	beq.n	6b52 <event_queue_proc+0x12>
    6b4c:	1c21      	adds	r1, r4, #0
    6b4e:	f7ff ff73 	bl	6a38 <event_queue>
    6b52:	bd10      	pop	{r4, pc}

00006b54 <event_alloc>:
    6b54:	b570      	push	{r4, r5, r6, lr}
    6b56:	2118      	movs	r1, #24
    6b58:	1c06      	adds	r6, r0, #0
    6b5a:	f000 fa87 	bl	706c <sark_alloc>
    6b5e:	4d0b      	ldr	r5, [pc, #44]	; (6b8c <event_alloc+0x38>)
    6b60:	1e04      	subs	r4, r0, #0
    6b62:	d00d      	beq.n	6b80 <event_alloc+0x2c>
    6b64:	1c31      	adds	r1, r6, #0
    6b66:	2218      	movs	r2, #24
    6b68:	f7ff fc2a 	bl	63c0 <sark_block_init>
    6b6c:	1c06      	adds	r6, r0, #0
    6b6e:	f7ff ea9c 	blx	60a8 <cpu_int_disable>
    6b72:	682a      	ldr	r2, [r5, #0]
    6b74:	6032      	str	r2, [r6, #0]
    6b76:	602c      	str	r4, [r5, #0]
    6b78:	f7ff ea9e 	blx	60b8 <cpu_int_restore>
    6b7c:	2001      	movs	r0, #1
    6b7e:	e003      	b.n	6b88 <event_alloc+0x34>
    6b80:	696a      	ldr	r2, [r5, #20]
    6b82:	2308      	movs	r3, #8
    6b84:	4313      	orrs	r3, r2
    6b86:	616b      	str	r3, [r5, #20]
    6b88:	bd70      	pop	{r4, r5, r6, pc}
    6b8a:	46c0      	nop			; (mov r8, r8)
    6b8c:	004000a4 	.word	0x004000a4

00006b90 <event_start>:
    6b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6b92:	1c04      	adds	r4, r0, #0
    6b94:	1c15      	adds	r5, r2, #0
    6b96:	2900      	cmp	r1, #0
    6b98:	d002      	beq.n	6ba0 <event_start+0x10>
    6b9a:	1c08      	adds	r0, r1, #0
    6b9c:	f7ff ffda 	bl	6b54 <event_alloc>
    6ba0:	4b28      	ldr	r3, [pc, #160]	; (6c44 <event_start+0xb4>)
    6ba2:	6959      	ldr	r1, [r3, #20]
    6ba4:	2900      	cmp	r1, #0
    6ba6:	d002      	beq.n	6bae <event_start+0x1e>
    6ba8:	200c      	movs	r0, #12
    6baa:	f7ff fa3f 	bl	602c <rt_error>
    6bae:	2d00      	cmp	r5, #0
    6bb0:	d001      	beq.n	6bb6 <event_start+0x26>
    6bb2:	f7ff fef1 	bl	6998 <event_wait>
    6bb6:	2c00      	cmp	r4, #0
    6bb8:	d008      	beq.n	6bcc <event_start+0x3c>
    6bba:	4b23      	ldr	r3, [pc, #140]	; (6c48 <event_start+0xb8>)
    6bbc:	22e2      	movs	r2, #226	; 0xe2
    6bbe:	601a      	str	r2, [r3, #0]
    6bc0:	4b22      	ldr	r3, [pc, #136]	; (6c4c <event_start+0xbc>)
    6bc2:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
    6bc4:	435c      	muls	r4, r3
    6bc6:	2384      	movs	r3, #132	; 0x84
    6bc8:	059b      	lsls	r3, r3, #22
    6bca:	601c      	str	r4, [r3, #0]
    6bcc:	f7ff ea6c 	blx	60a8 <cpu_int_disable>
    6bd0:	4d1f      	ldr	r5, [pc, #124]	; (6c50 <event_start+0xc0>)
    6bd2:	4b1c      	ldr	r3, [pc, #112]	; (6c44 <event_start+0xb4>)
    6bd4:	2220      	movs	r2, #32
    6bd6:	69d1      	ldr	r1, [r2, #28]
    6bd8:	4c1e      	ldr	r4, [pc, #120]	; (6c54 <event_start+0xc4>)
    6bda:	65d9      	str	r1, [r3, #92]	; 0x5c
    6bdc:	6829      	ldr	r1, [r5, #0]
    6bde:	6519      	str	r1, [r3, #80]	; 0x50
    6be0:	6821      	ldr	r1, [r4, #0]
    6be2:	6559      	str	r1, [r3, #84]	; 0x54
    6be4:	6d99      	ldr	r1, [r3, #88]	; 0x58
    6be6:	61d1      	str	r1, [r2, #28]
    6be8:	6c9a      	ldr	r2, [r3, #72]	; 0x48
    6bea:	602a      	str	r2, [r5, #0]
    6bec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    6bee:	6023      	str	r3, [r4, #0]
    6bf0:	f7ff ea62 	blx	60b8 <cpu_int_restore>
    6bf4:	2007      	movs	r0, #7
    6bf6:	f7ff fbdb 	bl	63b0 <sark_cpu_state>
    6bfa:	1c26      	adds	r6, r4, #0
    6bfc:	e007      	b.n	6c0e <event_start+0x7e>
    6bfe:	2001      	movs	r0, #1
    6c00:	f7ff ff36 	bl	6a70 <event_run2>
    6c04:	f7ff ea5c 	blx	60c0 <cpu_wfi>
    6c08:	7e3b      	ldrb	r3, [r7, #24]
    6c0a:	2b01      	cmp	r3, #1
    6c0c:	d0fa      	beq.n	6c04 <event_start+0x74>
    6c0e:	4c0d      	ldr	r4, [pc, #52]	; (6c44 <event_start+0xb4>)
    6c10:	7e23      	ldrb	r3, [r4, #24]
    6c12:	1c27      	adds	r7, r4, #0
    6c14:	2b02      	cmp	r3, #2
    6c16:	d1f2      	bne.n	6bfe <event_start+0x6e>
    6c18:	200b      	movs	r0, #11
    6c1a:	f7ff fbc9 	bl	63b0 <sark_cpu_state>
    6c1e:	4b0b      	ldr	r3, [pc, #44]	; (6c4c <event_start+0xbc>)
    6c20:	2138      	movs	r1, #56	; 0x38
    6c22:	69db      	ldr	r3, [r3, #28]
    6c24:	5d09      	ldrb	r1, [r1, r4]
    6c26:	332c      	adds	r3, #44	; 0x2c
    6c28:	7019      	strb	r1, [r3, #0]
    6c2a:	f7ff ea3e 	blx	60a8 <cpu_int_disable>
    6c2e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
    6c30:	2320      	movs	r3, #32
    6c32:	61da      	str	r2, [r3, #28]
    6c34:	6d23      	ldr	r3, [r4, #80]	; 0x50
    6c36:	602b      	str	r3, [r5, #0]
    6c38:	6d61      	ldr	r1, [r4, #84]	; 0x54
    6c3a:	6031      	str	r1, [r6, #0]
    6c3c:	f7ff ea3c 	blx	60b8 <cpu_int_restore>
    6c40:	6ba0      	ldr	r0, [r4, #56]	; 0x38
    6c42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6c44:	004000a4 	.word	0x004000a4
    6c48:	21000008 	.word	0x21000008
    6c4c:	00400068 	.word	0x00400068
    6c50:	1f00000c 	.word	0x1f00000c
    6c54:	1f000010 	.word	0x1f000010

00006c58 <event_register_timer>:
    6c58:	490b      	ldr	r1, [pc, #44]	; (6c88 <event_register_timer+0x30>)
    6c5a:	b508      	push	{r3, lr}
    6c5c:	0083      	lsls	r3, r0, #2
    6c5e:	185b      	adds	r3, r3, r1
    6c60:	681b      	ldr	r3, [r3, #0]
    6c62:	2b00      	cmp	r3, #0
    6c64:	d10c      	bne.n	6c80 <event_register_timer+0x28>
    6c66:	4a09      	ldr	r2, [pc, #36]	; (6c8c <event_register_timer+0x34>)
    6c68:	6013      	str	r3, [r2, #0]
    6c6a:	4b09      	ldr	r3, [pc, #36]	; (6c90 <event_register_timer+0x38>)
    6c6c:	2220      	movs	r2, #32
    6c6e:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
    6c70:	430a      	orrs	r2, r1
    6c72:	64da      	str	r2, [r3, #76]	; 0x4c
    6c74:	2105      	movs	r1, #5
    6c76:	2201      	movs	r2, #1
    6c78:	4b06      	ldr	r3, [pc, #24]	; (6c94 <event_register_timer+0x3c>)
    6c7a:	f000 f8bb 	bl	6df4 <sark_vic_set>
    6c7e:	e002      	b.n	6c86 <event_register_timer+0x2e>
    6c80:	2012      	movs	r0, #18
    6c82:	f7ff f9d3 	bl	602c <rt_error>
    6c86:	bd08      	pop	{r3, pc}
    6c88:	1f000200 	.word	0x1f000200
    6c8c:	21000028 	.word	0x21000028
    6c90:	004000a4 	.word	0x004000a4
    6c94:	00006f6c 	.word	0x00006f6c

00006c98 <timer_schedule>:
    6c98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6c9a:	4b1a      	ldr	r3, [pc, #104]	; (6d04 <timer_schedule+0x6c>)
    6c9c:	1c04      	adds	r4, r0, #0
    6c9e:	8e1d      	ldrh	r5, [r3, #48]	; 0x30
    6ca0:	434d      	muls	r5, r1
    6ca2:	f7ff ea02 	blx	60a8 <cpu_int_disable>
    6ca6:	4a18      	ldr	r2, [pc, #96]	; (6d08 <timer_schedule+0x70>)
    6ca8:	6853      	ldr	r3, [r2, #4]
    6caa:	2b00      	cmp	r3, #0
    6cac:	d106      	bne.n	6cbc <timer_schedule+0x24>
    6cae:	4b17      	ldr	r3, [pc, #92]	; (6d0c <timer_schedule+0x74>)
    6cb0:	6054      	str	r4, [r2, #4]
    6cb2:	601d      	str	r5, [r3, #0]
    6cb4:	4b16      	ldr	r3, [pc, #88]	; (6d10 <timer_schedule+0x78>)
    6cb6:	22e3      	movs	r2, #227	; 0xe3
    6cb8:	601a      	str	r2, [r3, #0]
    6cba:	e020      	b.n	6cfe <timer_schedule+0x66>
    6cbc:	4915      	ldr	r1, [pc, #84]	; (6d14 <timer_schedule+0x7c>)
    6cbe:	6809      	ldr	r1, [r1, #0]
    6cc0:	428d      	cmp	r5, r1
    6cc2:	d206      	bcs.n	6cd2 <timer_schedule+0x3a>
    6cc4:	4e11      	ldr	r6, [pc, #68]	; (6d0c <timer_schedule+0x74>)
    6cc6:	6035      	str	r5, [r6, #0]
    6cc8:	1b4d      	subs	r5, r1, r5
    6cca:	6023      	str	r3, [r4, #0]
    6ccc:	611d      	str	r5, [r3, #16]
    6cce:	6054      	str	r4, [r2, #4]
    6cd0:	e015      	b.n	6cfe <timer_schedule+0x66>
    6cd2:	1a6d      	subs	r5, r5, r1
    6cd4:	2100      	movs	r1, #0
    6cd6:	681a      	ldr	r2, [r3, #0]
    6cd8:	1c0e      	adds	r6, r1, #0
    6cda:	e009      	b.n	6cf0 <timer_schedule+0x58>
    6cdc:	6917      	ldr	r7, [r2, #16]
    6cde:	19f6      	adds	r6, r6, r7
    6ce0:	42ae      	cmp	r6, r5
    6ce2:	d902      	bls.n	6cea <timer_schedule+0x52>
    6ce4:	1b76      	subs	r6, r6, r5
    6ce6:	6116      	str	r6, [r2, #16]
    6ce8:	e004      	b.n	6cf4 <timer_schedule+0x5c>
    6cea:	1c13      	adds	r3, r2, #0
    6cec:	6812      	ldr	r2, [r2, #0]
    6cee:	19c9      	adds	r1, r1, r7
    6cf0:	2a00      	cmp	r2, #0
    6cf2:	d1f3      	bne.n	6cdc <timer_schedule+0x44>
    6cf4:	681a      	ldr	r2, [r3, #0]
    6cf6:	1a6d      	subs	r5, r5, r1
    6cf8:	6022      	str	r2, [r4, #0]
    6cfa:	6125      	str	r5, [r4, #16]
    6cfc:	601c      	str	r4, [r3, #0]
    6cfe:	f7ff e9dc 	blx	60b8 <cpu_int_restore>
    6d02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6d04:	00400068 	.word	0x00400068
    6d08:	004000a4 	.word	0x004000a4
    6d0c:	21000020 	.word	0x21000020
    6d10:	21000028 	.word	0x21000028
    6d14:	21000024 	.word	0x21000024

00006d18 <timer_schedule_proc>:
    6d18:	b510      	push	{r4, lr}
    6d1a:	1c1c      	adds	r4, r3, #0
    6d1c:	f7ff fede 	bl	6adc <event_new>
    6d20:	2800      	cmp	r0, #0
    6d22:	d003      	beq.n	6d2c <timer_schedule_proc+0x14>
    6d24:	1c21      	adds	r1, r4, #0
    6d26:	f7ff ffb7 	bl	6c98 <timer_schedule>
    6d2a:	2001      	movs	r0, #1
    6d2c:	bd10      	pop	{r4, pc}
	...

00006d30 <timer2_int>:
    6d30:	4b18      	ldr	r3, [pc, #96]	; (6d94 <timer2_int+0x64>)
    6d32:	2284      	movs	r2, #132	; 0x84
    6d34:	0592      	lsls	r2, r2, #22
    6d36:	b510      	push	{r4, lr}
    6d38:	601a      	str	r2, [r3, #0]
    6d3a:	4a17      	ldr	r2, [pc, #92]	; (6d98 <timer2_int+0x68>)
    6d3c:	2400      	movs	r4, #0
    6d3e:	6853      	ldr	r3, [r2, #4]
    6d40:	e003      	b.n	6d4a <timer2_int+0x1a>
    6d42:	6819      	ldr	r1, [r3, #0]
    6d44:	601c      	str	r4, [r3, #0]
    6d46:	1c1c      	adds	r4, r3, #0
    6d48:	1c0b      	adds	r3, r1, #0
    6d4a:	2b00      	cmp	r3, #0
    6d4c:	d008      	beq.n	6d60 <timer2_int+0x30>
    6d4e:	6919      	ldr	r1, [r3, #16]
    6d50:	2900      	cmp	r1, #0
    6d52:	d0f6      	beq.n	6d42 <timer2_int+0x12>
    6d54:	6053      	str	r3, [r2, #4]
    6d56:	4a11      	ldr	r2, [pc, #68]	; (6d9c <timer2_int+0x6c>)
    6d58:	6011      	str	r1, [r2, #0]
    6d5a:	2200      	movs	r2, #0
    6d5c:	611a      	str	r2, [r3, #16]
    6d5e:	e012      	b.n	6d86 <timer2_int+0x56>
    6d60:	6053      	str	r3, [r2, #4]
    6d62:	e010      	b.n	6d86 <timer2_int+0x56>
    6d64:	6863      	ldr	r3, [r4, #4]
    6d66:	2b00      	cmp	r3, #0
    6d68:	d002      	beq.n	6d70 <timer2_int+0x40>
    6d6a:	68a0      	ldr	r0, [r4, #8]
    6d6c:	68e1      	ldr	r1, [r4, #12]
    6d6e:	4798      	blx	r3
    6d70:	4b09      	ldr	r3, [pc, #36]	; (6d98 <timer2_int+0x68>)
    6d72:	6822      	ldr	r2, [r4, #0]
    6d74:	6819      	ldr	r1, [r3, #0]
    6d76:	6021      	str	r1, [r4, #0]
    6d78:	2100      	movs	r1, #0
    6d7a:	6161      	str	r1, [r4, #20]
    6d7c:	8919      	ldrh	r1, [r3, #8]
    6d7e:	601c      	str	r4, [r3, #0]
    6d80:	3901      	subs	r1, #1
    6d82:	1c14      	adds	r4, r2, #0
    6d84:	8119      	strh	r1, [r3, #8]
    6d86:	2c00      	cmp	r4, #0
    6d88:	d1ec      	bne.n	6d64 <timer2_int+0x34>
    6d8a:	4b05      	ldr	r3, [pc, #20]	; (6da0 <timer2_int+0x70>)
    6d8c:	22f8      	movs	r2, #248	; 0xf8
    6d8e:	0552      	lsls	r2, r2, #21
    6d90:	601a      	str	r2, [r3, #0]
    6d92:	bd10      	pop	{r4, pc}
    6d94:	2100002c 	.word	0x2100002c
    6d98:	004000a4 	.word	0x004000a4
    6d9c:	21000020 	.word	0x21000020
    6da0:	1f000030 	.word	0x1f000030

00006da4 <sark_vic_init>:
    6da4:	4b0b      	ldr	r3, [pc, #44]	; (6dd4 <sark_vic_init+0x30>)
    6da6:	2201      	movs	r2, #1
    6da8:	4252      	negs	r2, r2
    6daa:	b510      	push	{r4, lr}
    6dac:	601a      	str	r2, [r3, #0]
    6dae:	4b0a      	ldr	r3, [pc, #40]	; (6dd8 <sark_vic_init+0x34>)
    6db0:	2200      	movs	r2, #0
    6db2:	601a      	str	r2, [r3, #0]
    6db4:	4b09      	ldr	r3, [pc, #36]	; (6ddc <sark_vic_init+0x38>)
    6db6:	4c0a      	ldr	r4, [pc, #40]	; (6de0 <sark_vic_init+0x3c>)
    6db8:	601a      	str	r2, [r3, #0]
    6dba:	490a      	ldr	r1, [pc, #40]	; (6de4 <sark_vic_init+0x40>)
    6dbc:	4b0a      	ldr	r3, [pc, #40]	; (6de8 <sark_vic_init+0x44>)
    6dbe:	1e58      	subs	r0, r3, #1
    6dc0:	601a      	str	r2, [r3, #0]
    6dc2:	38ff      	subs	r0, #255	; 0xff
    6dc4:	3304      	adds	r3, #4
    6dc6:	6004      	str	r4, [r0, #0]
    6dc8:	428b      	cmp	r3, r1
    6dca:	d1f8      	bne.n	6dbe <sark_vic_init+0x1a>
    6dcc:	4b07      	ldr	r3, [pc, #28]	; (6dec <sark_vic_init+0x48>)
    6dce:	4a08      	ldr	r2, [pc, #32]	; (6df0 <sark_vic_init+0x4c>)
    6dd0:	601a      	str	r2, [r3, #0]
    6dd2:	bd10      	pop	{r4, pc}
    6dd4:	1f000014 	.word	0x1f000014
    6dd8:	1f00000c 	.word	0x1f00000c
    6ddc:	1f000030 	.word	0x1f000030
    6de0:	00006008 	.word	0x00006008
    6de4:	1f000240 	.word	0x1f000240
    6de8:	1f000200 	.word	0x1f000200
    6dec:	1f000034 	.word	0x1f000034
    6df0:	00006210 	.word	0x00006210

00006df4 <sark_vic_set>:
    6df4:	b530      	push	{r4, r5, lr}
    6df6:	2810      	cmp	r0, #16
    6df8:	d106      	bne.n	6e08 <sark_vic_set+0x14>
    6dfa:	2020      	movs	r0, #32
    6dfc:	61c3      	str	r3, [r0, #28]
    6dfe:	2001      	movs	r0, #1
    6e00:	4b0a      	ldr	r3, [pc, #40]	; (6e2c <sark_vic_set+0x38>)
    6e02:	4088      	lsls	r0, r1
    6e04:	6018      	str	r0, [r3, #0]
    6e06:	e009      	b.n	6e1c <sark_vic_set+0x28>
    6e08:	4d09      	ldr	r5, [pc, #36]	; (6e30 <sark_vic_set+0x3c>)
    6e0a:	0084      	lsls	r4, r0, #2
    6e0c:	1964      	adds	r4, r4, r5
    6e0e:	6023      	str	r3, [r4, #0]
    6e10:	4b08      	ldr	r3, [pc, #32]	; (6e34 <sark_vic_set+0x40>)
    6e12:	0080      	lsls	r0, r0, #2
    6e14:	18c0      	adds	r0, r0, r3
    6e16:	2320      	movs	r3, #32
    6e18:	430b      	orrs	r3, r1
    6e1a:	6003      	str	r3, [r0, #0]
    6e1c:	2a00      	cmp	r2, #0
    6e1e:	d004      	beq.n	6e2a <sark_vic_set+0x36>
    6e20:	2301      	movs	r3, #1
    6e22:	408b      	lsls	r3, r1
    6e24:	1c19      	adds	r1, r3, #0
    6e26:	4b04      	ldr	r3, [pc, #16]	; (6e38 <sark_vic_set+0x44>)
    6e28:	6019      	str	r1, [r3, #0]
    6e2a:	bd30      	pop	{r4, r5, pc}
    6e2c:	1f00000c 	.word	0x1f00000c
    6e30:	1f000100 	.word	0x1f000100
    6e34:	1f000200 	.word	0x1f000200
    6e38:	1f000010 	.word	0x1f000010

00006e3c <sig_queue>:
    6e3c:	e24ee004 	sub	lr, lr, #4
    6e40:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    6e44:	e59f1024 	ldr	r1, [pc, #36]	; 6e70 <sig_queue+0x34>
    6e48:	e3a02000 	mov	r2, #0
    6e4c:	e3a0441f 	mov	r4, #520093696	; 0x1f000000
    6e50:	e3a03202 	mov	r3, #536870912	; 0x20000000
    6e54:	e584301c 	str	r3, [r4, #28]
    6e58:	e1d207b0 	ldrh	r0, [r2, #112]	; 0x70
    6e5c:	e5d23073 	ldrb	r3, [r2, #115]	; 0x73
    6e60:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
    6e64:	faffff35 	blx	6b40 <event_queue_proc>
    6e68:	e5844030 	str	r4, [r4, #48]	; 0x30
    6e6c:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    6e70:	004000a4 	.word	0x004000a4

00006e74 <timer_queue>:
    6e74:	e24ee004 	sub	lr, lr, #4
    6e78:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    6e7c:	e3a03421 	mov	r3, #553648128	; 0x21000000
    6e80:	e583300c 	str	r3, [r3, #12]
    6e84:	e3a0441f 	mov	r4, #520093696	; 0x1f000000
    6e88:	e3a03010 	mov	r3, #16
    6e8c:	e584301c 	str	r3, [r4, #28]
    6e90:	e59f3020 	ldr	r3, [pc, #32]	; 6eb8 <timer_queue+0x44>
    6e94:	e3a02000 	mov	r2, #0
    6e98:	e593101c 	ldr	r1, [r3, #28]
    6e9c:	e1d206b0 	ldrh	r0, [r2, #96]	; 0x60
    6ea0:	e2811001 	add	r1, r1, #1
    6ea4:	e583101c 	str	r1, [r3, #28]
    6ea8:	e5d23063 	ldrb	r3, [r2, #99]	; 0x63
    6eac:	faffff23 	blx	6b40 <event_queue_proc>
    6eb0:	e5844030 	str	r4, [r4, #48]	; 0x30
    6eb4:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    6eb8:	004000a4 	.word	0x004000a4

00006ebc <rxpkt_queue>:
    6ebc:	e24ee004 	sub	lr, lr, #4
    6ec0:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    6ec4:	e3a03202 	mov	r3, #536870912	; 0x20000000
    6ec8:	e5932010 	ldr	r2, [r3, #16]
    6ecc:	e5931014 	ldr	r1, [r3, #20]
    6ed0:	e3a03000 	mov	r3, #0
    6ed4:	e1d306b4 	ldrh	r0, [r3, #100]	; 0x64
    6ed8:	e5d33067 	ldrb	r3, [r3, #103]	; 0x67
    6edc:	faffff17 	blx	6b40 <event_queue_proc>
    6ee0:	e3a0341f 	mov	r3, #520093696	; 0x1f000000
    6ee4:	e5833030 	str	r3, [r3, #48]	; 0x30
    6ee8:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^

00006eec <sdp_queue>:
    6eec:	e24ee004 	sub	lr, lr, #4
    6ef0:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    6ef4:	e3a0441f 	mov	r4, #520093696	; 0x1f000000
    6ef8:	e3a03201 	mov	r3, #268435456	; 0x10000000
    6efc:	e584301c 	str	r3, [r4, #28]
    6f00:	e59f3020 	ldr	r3, [pc, #32]	; 6f28 <sdp_queue+0x3c>
    6f04:	e5931028 	ldr	r1, [r3, #40]	; 0x28
    6f08:	e3a03000 	mov	r3, #0
    6f0c:	e5d1200a 	ldrb	r2, [r1, #10]
    6f10:	e1d306b8 	ldrh	r0, [r3, #104]	; 0x68
    6f14:	e1a022a2 	lsr	r2, r2, #5
    6f18:	e5d3306b 	ldrb	r3, [r3, #107]	; 0x6b
    6f1c:	faffff07 	blx	6b40 <event_queue_proc>
    6f20:	e5844030 	str	r4, [r4, #48]	; 0x30
    6f24:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    6f28:	004000a4 	.word	0x004000a4

00006f2c <user_queue>:
    6f2c:	e24ee004 	sub	lr, lr, #4
    6f30:	e92d503f 	push	{r0, r1, r2, r3, r4, r5, ip, lr}
    6f34:	e59f202c 	ldr	r2, [pc, #44]	; 6f68 <user_queue+0x3c>
    6f38:	e3a01000 	mov	r1, #0
    6f3c:	e3a0441f 	mov	r4, #520093696	; 0x1f000000
    6f40:	e3a03002 	mov	r3, #2
    6f44:	e584301c 	str	r3, [r4, #28]
    6f48:	e1d106bc 	ldrh	r0, [r1, #108]	; 0x6c
    6f4c:	e5d1306f 	ldrb	r3, [r1, #111]	; 0x6f
    6f50:	e5c2101b 	strb	r1, [r2, #27]
    6f54:	e5921020 	ldr	r1, [r2, #32]
    6f58:	e5922024 	ldr	r2, [r2, #36]	; 0x24
    6f5c:	fafffef7 	blx	6b40 <event_queue_proc>
    6f60:	e5844030 	str	r4, [r4, #48]	; 0x30
    6f64:	e8fd903f 	ldm	sp!, {r0, r1, r2, r3, r4, r5, ip, pc}^
    6f68:	004000a4 	.word	0x004000a4

00006f6c <timer2_int_han>:
    6f6c:	e24ee004 	sub	lr, lr, #4
    6f70:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    6f74:	faffff6d 	blx	6d30 <timer2_int>
    6f78:	e8fd900f 	ldm	sp!, {r0, r1, r2, r3, ip, pc}^

00006f7c <sark_fiq_han>:
    6f7c:	e92d000c 	push	{r2, r3}
    6f80:	e3a03202 	mov	r3, #536870912	; 0x20000000
    6f84:	e5933014 	ldr	r3, [r3, #20]
    6f88:	e59f3010 	ldr	r3, [pc, #16]	; 6fa0 <sark_fiq_han+0x24>
    6f8c:	e5932038 	ldr	r2, [r3, #56]	; 0x38
    6f90:	e2822001 	add	r2, r2, #1
    6f94:	e5832038 	str	r2, [r3, #56]	; 0x38
    6f98:	e8bd000c 	pop	{r2, r3}
    6f9c:	e25ef004 	subs	pc, lr, #4
    6fa0:	00400068 	.word	0x00400068

00006fa4 <sark_xalloc>:
    6fa4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    6fa6:	1c07      	adds	r7, r0, #0
    6fa8:	1c15      	adds	r5, r2, #0
    6faa:	2aff      	cmp	r2, #255	; 0xff
    6fac:	d858      	bhi.n	7060 <sark_xalloc+0xbc>
    6fae:	2900      	cmp	r1, #0
    6fb0:	d100      	bne.n	6fb4 <sark_xalloc+0x10>
    6fb2:	e055      	b.n	7060 <sark_xalloc+0xbc>
    6fb4:	0a1e      	lsrs	r6, r3, #8
    6fb6:	0798      	lsls	r0, r3, #30
    6fb8:	d401      	bmi.n	6fbe <sark_xalloc+0x1a>
    6fba:	225c      	movs	r2, #92	; 0x5c
    6fbc:	7816      	ldrb	r6, [r2, #0]
    6fbe:	0236      	lsls	r6, r6, #8
    6fc0:	1976      	adds	r6, r6, r5
    6fc2:	2d00      	cmp	r5, #0
    6fc4:	d005      	beq.n	6fd2 <sark_xalloc+0x2e>
    6fc6:	4a27      	ldr	r2, [pc, #156]	; (7064 <sark_xalloc+0xc0>)
    6fc8:	00b0      	lsls	r0, r6, #2
    6fca:	6812      	ldr	r2, [r2, #0]
    6fcc:	5882      	ldr	r2, [r0, r2]
    6fce:	2a00      	cmp	r2, #0
    6fd0:	d146      	bne.n	7060 <sark_xalloc+0xbc>
    6fd2:	2203      	movs	r2, #3
    6fd4:	3103      	adds	r1, #3
    6fd6:	4391      	bics	r1, r2
    6fd8:	2201      	movs	r2, #1
    6fda:	3108      	adds	r1, #8
    6fdc:	4013      	ands	r3, r2
    6fde:	9101      	str	r1, [sp, #4]
    6fe0:	9300      	str	r3, [sp, #0]
    6fe2:	d003      	beq.n	6fec <sark_xalloc+0x48>
    6fe4:	2006      	movs	r0, #6
    6fe6:	f7ff e870 	blx	60c8 <sark_lock_get>
    6fea:	4684      	mov	ip, r0
    6fec:	683c      	ldr	r4, [r7, #0]
    6fee:	2200      	movs	r2, #0
    6ff0:	e02d      	b.n	704e <sark_xalloc+0xaa>
    6ff2:	9801      	ldr	r0, [sp, #4]
    6ff4:	6821      	ldr	r1, [r4, #0]
    6ff6:	1823      	adds	r3, r4, r0
    6ff8:	42a3      	cmp	r3, r4
    6ffa:	d92a      	bls.n	7052 <sark_xalloc+0xae>
    6ffc:	428b      	cmp	r3, r1
    6ffe:	d902      	bls.n	7006 <sark_xalloc+0x62>
    7000:	1c22      	adds	r2, r4, #0
    7002:	6864      	ldr	r4, [r4, #4]
    7004:	e023      	b.n	704e <sark_xalloc+0xaa>
    7006:	1c18      	adds	r0, r3, #0
    7008:	3008      	adds	r0, #8
    700a:	4281      	cmp	r1, r0
    700c:	d904      	bls.n	7018 <sark_xalloc+0x74>
    700e:	6019      	str	r1, [r3, #0]
    7010:	6861      	ldr	r1, [r4, #4]
    7012:	6059      	str	r1, [r3, #4]
    7014:	6023      	str	r3, [r4, #0]
    7016:	6063      	str	r3, [r4, #4]
    7018:	6863      	ldr	r3, [r4, #4]
    701a:	2a00      	cmp	r2, #0
    701c:	d001      	beq.n	7022 <sark_xalloc+0x7e>
    701e:	6053      	str	r3, [r2, #4]
    7020:	e000      	b.n	7024 <sark_xalloc+0x80>
    7022:	603b      	str	r3, [r7, #0]
    7024:	9a00      	ldr	r2, [sp, #0]
    7026:	2a00      	cmp	r2, #0
    7028:	d003      	beq.n	7032 <sark_xalloc+0x8e>
    702a:	4660      	mov	r0, ip
    702c:	2106      	movs	r1, #6
    702e:	f7ff e85e 	blx	60ec <sark_lock_free>
    7032:	480d      	ldr	r0, [pc, #52]	; (7068 <sark_xalloc+0xc4>)
    7034:	1833      	adds	r3, r6, r0
    7036:	6063      	str	r3, [r4, #4]
    7038:	2d00      	cmp	r5, #0
    703a:	d005      	beq.n	7048 <sark_xalloc+0xa4>
    703c:	4b09      	ldr	r3, [pc, #36]	; (7064 <sark_xalloc+0xc0>)
    703e:	1c22      	adds	r2, r4, #0
    7040:	681b      	ldr	r3, [r3, #0]
    7042:	00b6      	lsls	r6, r6, #2
    7044:	3208      	adds	r2, #8
    7046:	50f2      	str	r2, [r6, r3]
    7048:	1c20      	adds	r0, r4, #0
    704a:	3008      	adds	r0, #8
    704c:	e009      	b.n	7062 <sark_xalloc+0xbe>
    704e:	2c00      	cmp	r4, #0
    7050:	d1cf      	bne.n	6ff2 <sark_xalloc+0x4e>
    7052:	9900      	ldr	r1, [sp, #0]
    7054:	2900      	cmp	r1, #0
    7056:	d003      	beq.n	7060 <sark_xalloc+0xbc>
    7058:	4660      	mov	r0, ip
    705a:	2106      	movs	r1, #6
    705c:	f7ff e846 	blx	60ec <sark_lock_free>
    7060:	2000      	movs	r0, #0
    7062:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    7064:	e5007fdc 	.word	0xe5007fdc
    7068:	ffff0000 	.word	0xffff0000

0000706c <sark_alloc>:
    706c:	4a04      	ldr	r2, [pc, #16]	; (7080 <sark_alloc+0x14>)
    706e:	b508      	push	{r3, lr}
    7070:	1c03      	adds	r3, r0, #0
    7072:	6990      	ldr	r0, [r2, #24]
    7074:	2200      	movs	r2, #0
    7076:	4359      	muls	r1, r3
    7078:	1c13      	adds	r3, r2, #0
    707a:	f7ff ff93 	bl	6fa4 <sark_xalloc>
    707e:	bd08      	pop	{r3, pc}
    7080:	00400068 	.word	0x00400068

00007084 <sark_heap_init>:
    7084:	1c03      	adds	r3, r0, #0
    7086:	330c      	adds	r3, #12
    7088:	3908      	subs	r1, #8
    708a:	6043      	str	r3, [r0, #4]
    708c:	6003      	str	r3, [r0, #0]
    708e:	2300      	movs	r3, #0
    7090:	6081      	str	r1, [r0, #8]
    7092:	60c1      	str	r1, [r0, #12]
    7094:	6103      	str	r3, [r0, #16]
    7096:	600b      	str	r3, [r1, #0]
    7098:	604b      	str	r3, [r1, #4]
    709a:	4770      	bx	lr

0000709c <io_buf_init>:
    709c:	b538      	push	{r3, r4, r5, lr}
    709e:	4d0c      	ldr	r5, [pc, #48]	; (70d0 <io_buf_init+0x34>)
    70a0:	4b0c      	ldr	r3, [pc, #48]	; (70d4 <io_buf_init+0x38>)
    70a2:	6d29      	ldr	r1, [r5, #80]	; 0x50
    70a4:	6818      	ldr	r0, [r3, #0]
    70a6:	3110      	adds	r1, #16
    70a8:	2200      	movs	r2, #0
    70aa:	2301      	movs	r3, #1
    70ac:	f7ff ff7a 	bl	6fa4 <sark_xalloc>
    70b0:	1e04      	subs	r4, r0, #0
    70b2:	d102      	bne.n	70ba <io_buf_init+0x1e>
    70b4:	200e      	movs	r0, #14
    70b6:	f7fe ffb9 	bl	602c <rt_error>
    70ba:	69eb      	ldr	r3, [r5, #28]
    70bc:	6063      	str	r3, [r4, #4]
    70be:	4a06      	ldr	r2, [pc, #24]	; (70d8 <io_buf_init+0x3c>)
    70c0:	8b2b      	ldrh	r3, [r5, #24]
    70c2:	60a3      	str	r3, [r4, #8]
    70c4:	2300      	movs	r3, #0
    70c6:	1c20      	adds	r0, r4, #0
    70c8:	6023      	str	r3, [r4, #0]
    70ca:	6013      	str	r3, [r2, #0]
    70cc:	60e3      	str	r3, [r4, #12]
    70ce:	bd38      	pop	{r3, r4, r5, pc}
    70d0:	e5007f00 	.word	0xe5007f00
    70d4:	e5007fd0 	.word	0xe5007fd0
    70d8:	00400054 	.word	0x00400054

000070dc <io_put_char>:
    70dc:	b570      	push	{r4, r5, r6, lr}
    70de:	1c0d      	adds	r5, r1, #0
    70e0:	2803      	cmp	r0, #3
    70e2:	d907      	bls.n	70f4 <io_put_char+0x18>
    70e4:	4a34      	ldr	r2, [pc, #208]	; (71b8 <io_put_char+0xdc>)
    70e6:	6813      	ldr	r3, [r2, #0]
    70e8:	54c1      	strb	r1, [r0, r3]
    70ea:	3301      	adds	r3, #1
    70ec:	6013      	str	r3, [r2, #0]
    70ee:	2200      	movs	r2, #0
    70f0:	54c2      	strb	r2, [r0, r3]
    70f2:	e060      	b.n	71b6 <io_put_char+0xda>
    70f4:	2800      	cmp	r0, #0
    70f6:	d13a      	bne.n	716e <io_put_char+0x92>
    70f8:	4b30      	ldr	r3, [pc, #192]	; (71bc <io_put_char+0xe0>)
    70fa:	681b      	ldr	r3, [r3, #0]
    70fc:	2b00      	cmp	r3, #0
    70fe:	d11d      	bne.n	713c <io_put_char+0x60>
    7100:	2001      	movs	r0, #1
    7102:	2192      	movs	r1, #146	; 0x92
    7104:	4081      	lsls	r1, r0
    7106:	f7ff ffb1 	bl	706c <sark_alloc>
    710a:	1e04      	subs	r4, r0, #0
    710c:	d102      	bne.n	7114 <io_put_char+0x38>
    710e:	200e      	movs	r0, #14
    7110:	f7fe ff8c 	bl	602c <rt_error>
    7114:	2307      	movs	r3, #7
    7116:	7223      	strb	r3, [r4, #8]
    7118:	2300      	movs	r3, #0
    711a:	7263      	strb	r3, [r4, #9]
    711c:	23ff      	movs	r3, #255	; 0xff
    711e:	72a3      	strb	r3, [r4, #10]
    7120:	4b27      	ldr	r3, [pc, #156]	; (71c0 <io_put_char+0xe4>)
    7122:	889a      	ldrh	r2, [r3, #4]
    7124:	81a2      	strh	r2, [r4, #12]
    7126:	4a27      	ldr	r2, [pc, #156]	; (71c4 <io_put_char+0xe8>)
    7128:	6812      	ldr	r2, [r2, #0]
    712a:	72e2      	strb	r2, [r4, #11]
    712c:	881b      	ldrh	r3, [r3, #0]
    712e:	81e3      	strh	r3, [r4, #14]
    7130:	2340      	movs	r3, #64	; 0x40
    7132:	8223      	strh	r3, [r4, #16]
    7134:	230c      	movs	r3, #12
    7136:	80a3      	strh	r3, [r4, #4]
    7138:	4b20      	ldr	r3, [pc, #128]	; (71bc <io_put_char+0xe0>)
    713a:	601c      	str	r4, [r3, #0]
    713c:	4b1f      	ldr	r3, [pc, #124]	; (71bc <io_put_char+0xe0>)
    713e:	6818      	ldr	r0, [r3, #0]
    7140:	8883      	ldrh	r3, [r0, #4]
    7142:	18c2      	adds	r2, r0, r3
    7144:	3301      	adds	r3, #1
    7146:	041b      	lsls	r3, r3, #16
    7148:	0c1b      	lsrs	r3, r3, #16
    714a:	7215      	strb	r5, [r2, #8]
    714c:	8083      	strh	r3, [r0, #4]
    714e:	2d00      	cmp	r5, #0
    7150:	d005      	beq.n	715e <io_put_char+0x82>
    7152:	2d0a      	cmp	r5, #10
    7154:	d003      	beq.n	715e <io_put_char+0x82>
    7156:	2286      	movs	r2, #134	; 0x86
    7158:	0052      	lsls	r2, r2, #1
    715a:	4293      	cmp	r3, r2
    715c:	d12b      	bne.n	71b6 <io_put_char+0xda>
    715e:	210a      	movs	r1, #10
    7160:	f7ff fa24 	bl	65ac <sark_msg_send>
    7164:	4b15      	ldr	r3, [pc, #84]	; (71bc <io_put_char+0xe0>)
    7166:	220c      	movs	r2, #12
    7168:	681b      	ldr	r3, [r3, #0]
    716a:	809a      	strh	r2, [r3, #4]
    716c:	e023      	b.n	71b6 <io_put_char+0xda>
    716e:	2802      	cmp	r0, #2
    7170:	d121      	bne.n	71b6 <io_put_char+0xda>
    7172:	4e15      	ldr	r6, [pc, #84]	; (71c8 <io_put_char+0xec>)
    7174:	6833      	ldr	r3, [r6, #0]
    7176:	2b00      	cmp	r3, #0
    7178:	d105      	bne.n	7186 <io_put_char+0xaa>
    717a:	4b12      	ldr	r3, [pc, #72]	; (71c4 <io_put_char+0xe8>)
    717c:	69dc      	ldr	r4, [r3, #28]
    717e:	f7ff ff8d 	bl	709c <io_buf_init>
    7182:	65a0      	str	r0, [r4, #88]	; 0x58
    7184:	6030      	str	r0, [r6, #0]
    7186:	4a11      	ldr	r2, [pc, #68]	; (71cc <io_put_char+0xf0>)
    7188:	6834      	ldr	r4, [r6, #0]
    718a:	6813      	ldr	r3, [r2, #0]
    718c:	18e1      	adds	r1, r4, r3
    718e:	3301      	adds	r3, #1
    7190:	6013      	str	r3, [r2, #0]
    7192:	4a0b      	ldr	r2, [pc, #44]	; (71c0 <io_put_char+0xe4>)
    7194:	740d      	strb	r5, [r1, #16]
    7196:	6d12      	ldr	r2, [r2, #80]	; 0x50
    7198:	4293      	cmp	r3, r2
    719a:	d107      	bne.n	71ac <io_put_char+0xd0>
    719c:	60e3      	str	r3, [r4, #12]
    719e:	f7ff ff7d 	bl	709c <io_buf_init>
    71a2:	6833      	ldr	r3, [r6, #0]
    71a4:	6020      	str	r0, [r4, #0]
    71a6:	681b      	ldr	r3, [r3, #0]
    71a8:	6033      	str	r3, [r6, #0]
    71aa:	e004      	b.n	71b6 <io_put_char+0xda>
    71ac:	2d00      	cmp	r5, #0
    71ae:	d001      	beq.n	71b4 <io_put_char+0xd8>
    71b0:	2d0a      	cmp	r5, #10
    71b2:	d100      	bne.n	71b6 <io_put_char+0xda>
    71b4:	60e3      	str	r3, [r4, #12]
    71b6:	bd70      	pop	{r4, r5, r6, pc}
    71b8:	00400058 	.word	0x00400058
    71bc:	0040004c 	.word	0x0040004c
    71c0:	e5007f00 	.word	0xe5007f00
    71c4:	00400068 	.word	0x00400068
    71c8:	00400050 	.word	0x00400050
    71cc:	00400054 	.word	0x00400054

000071d0 <io_put_fixed>:
    71d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    71d2:	b08d      	sub	sp, #52	; 0x34
    71d4:	9001      	str	r0, [sp, #4]
    71d6:	1c15      	adds	r5, r2, #0
    71d8:	2b0c      	cmp	r3, #12
    71da:	d900      	bls.n	71de <io_put_fixed+0xe>
    71dc:	230c      	movs	r3, #12
    71de:	1c0a      	adds	r2, r1, #0
    71e0:	2400      	movs	r4, #0
    71e2:	e008      	b.n	71f6 <io_put_fixed+0x26>
    71e4:	0c17      	lsrs	r7, r2, #16
    71e6:	3730      	adds	r7, #48	; 0x30
    71e8:	46bc      	mov	ip, r7
    71ea:	a805      	add	r0, sp, #20
    71ec:	3401      	adds	r4, #1
    71ee:	18c7      	adds	r7, r0, r3
    71f0:	4266      	negs	r6, r4
    71f2:	4660      	mov	r0, ip
    71f4:	55b8      	strb	r0, [r7, r6]
    71f6:	0412      	lsls	r2, r2, #16
    71f8:	0c12      	lsrs	r2, r2, #16
    71fa:	200a      	movs	r0, #10
    71fc:	4342      	muls	r2, r0
    71fe:	429c      	cmp	r4, r3
    7200:	d1f0      	bne.n	71e4 <io_put_fixed+0x14>
    7202:	0c12      	lsrs	r2, r2, #16
    7204:	2004      	movs	r0, #4
    7206:	4290      	cmp	r0, r2
    7208:	4180      	sbcs	r0, r0
    720a:	2601      	movs	r6, #1
    720c:	4240      	negs	r0, r0
    720e:	2200      	movs	r2, #0
    7210:	46b4      	mov	ip, r6
    7212:	2730      	movs	r7, #48	; 0x30
    7214:	e00a      	b.n	722c <io_put_fixed+0x5c>
    7216:	a805      	add	r0, sp, #20
    7218:	5c16      	ldrb	r6, [r2, r0]
    721a:	2e38      	cmp	r6, #56	; 0x38
    721c:	d902      	bls.n	7224 <io_put_fixed+0x54>
    721e:	5417      	strb	r7, [r2, r0]
    7220:	2001      	movs	r0, #1
    7222:	e002      	b.n	722a <io_put_fixed+0x5a>
    7224:	3601      	adds	r6, #1
    7226:	5416      	strb	r6, [r2, r0]
    7228:	2000      	movs	r0, #0
    722a:	3201      	adds	r2, #1
    722c:	429a      	cmp	r2, r3
    722e:	d202      	bcs.n	7236 <io_put_fixed+0x66>
    7230:	4666      	mov	r6, ip
    7232:	4230      	tst	r0, r6
    7234:	d1ef      	bne.n	7216 <io_put_fixed+0x46>
    7236:	2b00      	cmp	r3, #0
    7238:	d003      	beq.n	7242 <io_put_fixed+0x72>
    723a:	242e      	movs	r4, #46	; 0x2e
    723c:	aa05      	add	r2, sp, #20
    723e:	54d4      	strb	r4, [r2, r3]
    7240:	1c5c      	adds	r4, r3, #1
    7242:	0c09      	lsrs	r1, r1, #16
    7244:	1841      	adds	r1, r0, r1
    7246:	a803      	add	r0, sp, #12
    7248:	f7fe efb2 	blx	61b0 <sark_div10>
    724c:	9a04      	ldr	r2, [sp, #16]
    724e:	9903      	ldr	r1, [sp, #12]
    7250:	ab05      	add	r3, sp, #20
    7252:	3230      	adds	r2, #48	; 0x30
    7254:	54e2      	strb	r2, [r4, r3]
    7256:	1c66      	adds	r6, r4, #1
    7258:	2900      	cmp	r1, #0
    725a:	d001      	beq.n	7260 <io_put_fixed+0x90>
    725c:	1c34      	adds	r4, r6, #0
    725e:	e7f2      	b.n	7246 <io_put_fixed+0x76>
    7260:	9813      	ldr	r0, [sp, #76]	; 0x4c
    7262:	2800      	cmp	r0, #0
    7264:	d008      	beq.n	7278 <io_put_fixed+0xa8>
    7266:	222d      	movs	r2, #45	; 0x2d
    7268:	559a      	strb	r2, [r3, r6]
    726a:	1ca6      	adds	r6, r4, #2
    726c:	e004      	b.n	7278 <io_put_fixed+0xa8>
    726e:	9801      	ldr	r0, [sp, #4]
    7270:	9912      	ldr	r1, [sp, #72]	; 0x48
    7272:	f7ff ff33 	bl	70dc <io_put_char>
    7276:	3d01      	subs	r5, #1
    7278:	1c73      	adds	r3, r6, #1
    727a:	429d      	cmp	r5, r3
    727c:	d8f7      	bhi.n	726e <io_put_fixed+0x9e>
    727e:	3e01      	subs	r6, #1
    7280:	ab05      	add	r3, sp, #20
    7282:	5cf1      	ldrb	r1, [r6, r3]
    7284:	9801      	ldr	r0, [sp, #4]
    7286:	f7ff ff29 	bl	70dc <io_put_char>
    728a:	2e00      	cmp	r6, #0
    728c:	d1f7      	bne.n	727e <io_put_fixed+0xae>
    728e:	b00d      	add	sp, #52	; 0x34
    7290:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

00007294 <io_printf>:
    7294:	b40e      	push	{r1, r2, r3}
    7296:	b5f0      	push	{r4, r5, r6, r7, lr}
    7298:	b08c      	sub	sp, #48	; 0x30
    729a:	1c04      	adds	r4, r0, #0
    729c:	9d11      	ldr	r5, [sp, #68]	; 0x44
    729e:	2803      	cmp	r0, #3
    72a0:	d100      	bne.n	72a4 <io_printf+0x10>
    72a2:	e145      	b.n	7530 <io_printf+0x29c>
    72a4:	d903      	bls.n	72ae <io_printf+0x1a>
    72a6:	4aa5      	ldr	r2, [pc, #660]	; (753c <io_printf+0x2a8>)
    72a8:	2300      	movs	r3, #0
    72aa:	7003      	strb	r3, [r0, #0]
    72ac:	6013      	str	r3, [r2, #0]
    72ae:	ab12      	add	r3, sp, #72	; 0x48
    72b0:	9305      	str	r3, [sp, #20]
    72b2:	7829      	ldrb	r1, [r5, #0]
    72b4:	2900      	cmp	r1, #0
    72b6:	d100      	bne.n	72ba <io_printf+0x26>
    72b8:	e13a      	b.n	7530 <io_printf+0x29c>
    72ba:	2925      	cmp	r1, #37	; 0x25
    72bc:	d001      	beq.n	72c2 <io_printf+0x2e>
    72be:	3501      	adds	r5, #1
    72c0:	e053      	b.n	736a <io_printf+0xd6>
    72c2:	7869      	ldrb	r1, [r5, #1]
    72c4:	3502      	adds	r5, #2
    72c6:	2900      	cmp	r1, #0
    72c8:	d100      	bne.n	72cc <io_printf+0x38>
    72ca:	e131      	b.n	7530 <io_printf+0x29c>
    72cc:	2930      	cmp	r1, #48	; 0x30
    72ce:	d002      	beq.n	72d6 <io_printf+0x42>
    72d0:	2020      	movs	r0, #32
    72d2:	9003      	str	r0, [sp, #12]
    72d4:	e000      	b.n	72d8 <io_printf+0x44>
    72d6:	9103      	str	r1, [sp, #12]
    72d8:	2600      	movs	r6, #0
    72da:	220a      	movs	r2, #10
    72dc:	e007      	b.n	72ee <io_printf+0x5a>
    72de:	4356      	muls	r6, r2
    72e0:	1876      	adds	r6, r6, r1
    72e2:	7829      	ldrb	r1, [r5, #0]
    72e4:	3e30      	subs	r6, #48	; 0x30
    72e6:	3501      	adds	r5, #1
    72e8:	2900      	cmp	r1, #0
    72ea:	d100      	bne.n	72ee <io_printf+0x5a>
    72ec:	e120      	b.n	7530 <io_printf+0x29c>
    72ee:	1c0b      	adds	r3, r1, #0
    72f0:	3b30      	subs	r3, #48	; 0x30
    72f2:	2b09      	cmp	r3, #9
    72f4:	d9f3      	bls.n	72de <io_printf+0x4a>
    72f6:	1c37      	adds	r7, r6, #0
    72f8:	2306      	movs	r3, #6
    72fa:	292e      	cmp	r1, #46	; 0x2e
    72fc:	d110      	bne.n	7320 <io_printf+0x8c>
    72fe:	7829      	ldrb	r1, [r5, #0]
    7300:	2300      	movs	r3, #0
    7302:	3501      	adds	r5, #1
    7304:	200a      	movs	r0, #10
    7306:	e004      	b.n	7312 <io_printf+0x7e>
    7308:	4343      	muls	r3, r0
    730a:	185b      	adds	r3, r3, r1
    730c:	3b30      	subs	r3, #48	; 0x30
    730e:	7829      	ldrb	r1, [r5, #0]
    7310:	3501      	adds	r5, #1
    7312:	1c0a      	adds	r2, r1, #0
    7314:	3a30      	subs	r2, #48	; 0x30
    7316:	2a09      	cmp	r2, #9
    7318:	d9f6      	bls.n	7308 <io_printf+0x74>
    731a:	2900      	cmp	r1, #0
    731c:	d100      	bne.n	7320 <io_printf+0x8c>
    731e:	e107      	b.n	7530 <io_printf+0x29c>
    7320:	296b      	cmp	r1, #107	; 0x6b
    7322:	d100      	bne.n	7326 <io_printf+0x92>
    7324:	e0b0      	b.n	7488 <io_printf+0x1f4>
    7326:	d80d      	bhi.n	7344 <io_printf+0xb0>
    7328:	2963      	cmp	r1, #99	; 0x63
    732a:	d01a      	beq.n	7362 <io_printf+0xce>
    732c:	d805      	bhi.n	733a <io_printf+0xa6>
    732e:	294b      	cmp	r1, #75	; 0x4b
    7330:	d100      	bne.n	7334 <io_printf+0xa0>
    7332:	e09a      	b.n	746a <io_printf+0x1d6>
    7334:	2952      	cmp	r1, #82	; 0x52
    7336:	d118      	bne.n	736a <io_printf+0xd6>
    7338:	e09e      	b.n	7478 <io_printf+0x1e4>
    733a:	2964      	cmp	r1, #100	; 0x64
    733c:	d036      	beq.n	73ac <io_printf+0x118>
    733e:	2966      	cmp	r1, #102	; 0x66
    7340:	d113      	bne.n	736a <io_printf+0xd6>
    7342:	e092      	b.n	746a <io_printf+0x1d6>
    7344:	2975      	cmp	r1, #117	; 0x75
    7346:	d066      	beq.n	7416 <io_printf+0x182>
    7348:	d805      	bhi.n	7356 <io_printf+0xc2>
    734a:	2972      	cmp	r1, #114	; 0x72
    734c:	d100      	bne.n	7350 <io_printf+0xbc>
    734e:	e09b      	b.n	7488 <io_printf+0x1f4>
    7350:	2973      	cmp	r1, #115	; 0x73
    7352:	d10a      	bne.n	736a <io_printf+0xd6>
    7354:	e00d      	b.n	7372 <io_printf+0xde>
    7356:	2978      	cmp	r1, #120	; 0x78
    7358:	d100      	bne.n	735c <io_printf+0xc8>
    735a:	e0a6      	b.n	74aa <io_printf+0x216>
    735c:	297a      	cmp	r1, #122	; 0x7a
    735e:	d104      	bne.n	736a <io_printf+0xd6>
    7360:	e0ce      	b.n	7500 <io_printf+0x26c>
    7362:	9b05      	ldr	r3, [sp, #20]
    7364:	6819      	ldr	r1, [r3, #0]
    7366:	1d1a      	adds	r2, r3, #4
    7368:	9205      	str	r2, [sp, #20]
    736a:	1c20      	adds	r0, r4, #0
    736c:	f7ff feb6 	bl	70dc <io_put_char>
    7370:	e79f      	b.n	72b2 <io_printf+0x1e>
    7372:	9b05      	ldr	r3, [sp, #20]
    7374:	681e      	ldr	r6, [r3, #0]
    7376:	1d1a      	adds	r2, r3, #4
    7378:	1c33      	adds	r3, r6, #0
    737a:	9205      	str	r2, [sp, #20]
    737c:	781a      	ldrb	r2, [r3, #0]
    737e:	1b99      	subs	r1, r3, r6
    7380:	9103      	str	r1, [sp, #12]
    7382:	3301      	adds	r3, #1
    7384:	2a00      	cmp	r2, #0
    7386:	d1f9      	bne.n	737c <io_printf+0xe8>
    7388:	e004      	b.n	7394 <io_printf+0x100>
    738a:	1c20      	adds	r0, r4, #0
    738c:	2120      	movs	r1, #32
    738e:	f7ff fea5 	bl	70dc <io_put_char>
    7392:	3f01      	subs	r7, #1
    7394:	9a03      	ldr	r2, [sp, #12]
    7396:	4297      	cmp	r7, r2
    7398:	dcf7      	bgt.n	738a <io_printf+0xf6>
    739a:	e003      	b.n	73a4 <io_printf+0x110>
    739c:	1c20      	adds	r0, r4, #0
    739e:	3601      	adds	r6, #1
    73a0:	f7ff fe9c 	bl	70dc <io_put_char>
    73a4:	7831      	ldrb	r1, [r6, #0]
    73a6:	2900      	cmp	r1, #0
    73a8:	d1f8      	bne.n	739c <io_printf+0x108>
    73aa:	e782      	b.n	72b2 <io_printf+0x1e>
    73ac:	9b05      	ldr	r3, [sp, #20]
    73ae:	6819      	ldr	r1, [r3, #0]
    73b0:	1d1a      	adds	r2, r3, #4
    73b2:	2300      	movs	r3, #0
    73b4:	9205      	str	r2, [sp, #20]
    73b6:	9303      	str	r3, [sp, #12]
    73b8:	4299      	cmp	r1, r3
    73ba:	da02      	bge.n	73c2 <io_printf+0x12e>
    73bc:	202d      	movs	r0, #45	; 0x2d
    73be:	4249      	negs	r1, r1
    73c0:	9003      	str	r0, [sp, #12]
    73c2:	2700      	movs	r7, #0
    73c4:	a806      	add	r0, sp, #24
    73c6:	f7fe eef4 	blx	61b0 <sark_div10>
    73ca:	9a07      	ldr	r2, [sp, #28]
    73cc:	9906      	ldr	r1, [sp, #24]
    73ce:	ab08      	add	r3, sp, #32
    73d0:	3230      	adds	r2, #48	; 0x30
    73d2:	54fa      	strb	r2, [r7, r3]
    73d4:	3701      	adds	r7, #1
    73d6:	2900      	cmp	r1, #0
    73d8:	d1f4      	bne.n	73c4 <io_printf+0x130>
    73da:	e001      	b.n	73e0 <io_printf+0x14c>
    73dc:	2f00      	cmp	r7, #0
    73de:	d003      	beq.n	73e8 <io_printf+0x154>
    73e0:	3f01      	subs	r7, #1
    73e2:	5cfa      	ldrb	r2, [r7, r3]
    73e4:	2a30      	cmp	r2, #48	; 0x30
    73e6:	d0f9      	beq.n	73dc <io_printf+0x148>
    73e8:	9903      	ldr	r1, [sp, #12]
    73ea:	2900      	cmp	r1, #0
    73ec:	d007      	beq.n	73fe <io_printf+0x16a>
    73ee:	3701      	adds	r7, #1
    73f0:	55d9      	strb	r1, [r3, r7]
    73f2:	e004      	b.n	73fe <io_printf+0x16a>
    73f4:	1c20      	adds	r0, r4, #0
    73f6:	2120      	movs	r1, #32
    73f8:	f7ff fe70 	bl	70dc <io_put_char>
    73fc:	3e01      	subs	r6, #1
    73fe:	1c7b      	adds	r3, r7, #1
    7400:	429e      	cmp	r6, r3
    7402:	d8f7      	bhi.n	73f4 <io_printf+0x160>
    7404:	ab08      	add	r3, sp, #32
    7406:	5cf9      	ldrb	r1, [r7, r3]
    7408:	1c20      	adds	r0, r4, #0
    740a:	3f01      	subs	r7, #1
    740c:	f7ff fe66 	bl	70dc <io_put_char>
    7410:	1c79      	adds	r1, r7, #1
    7412:	d1f7      	bne.n	7404 <io_printf+0x170>
    7414:	e74d      	b.n	72b2 <io_printf+0x1e>
    7416:	9b05      	ldr	r3, [sp, #20]
    7418:	2700      	movs	r7, #0
    741a:	6819      	ldr	r1, [r3, #0]
    741c:	1d1a      	adds	r2, r3, #4
    741e:	9205      	str	r2, [sp, #20]
    7420:	a806      	add	r0, sp, #24
    7422:	f7fe eec6 	blx	61b0 <sark_div10>
    7426:	9a07      	ldr	r2, [sp, #28]
    7428:	9906      	ldr	r1, [sp, #24]
    742a:	3230      	adds	r2, #48	; 0x30
    742c:	ab08      	add	r3, sp, #32
    742e:	54fa      	strb	r2, [r7, r3]
    7430:	3701      	adds	r7, #1
    7432:	2900      	cmp	r1, #0
    7434:	d1f4      	bne.n	7420 <io_printf+0x18c>
    7436:	e001      	b.n	743c <io_printf+0x1a8>
    7438:	2f00      	cmp	r7, #0
    743a:	d00a      	beq.n	7452 <io_printf+0x1be>
    743c:	3f01      	subs	r7, #1
    743e:	ab08      	add	r3, sp, #32
    7440:	5cfb      	ldrb	r3, [r7, r3]
    7442:	2b30      	cmp	r3, #48	; 0x30
    7444:	d105      	bne.n	7452 <io_printf+0x1be>
    7446:	e7f7      	b.n	7438 <io_printf+0x1a4>
    7448:	1c20      	adds	r0, r4, #0
    744a:	9903      	ldr	r1, [sp, #12]
    744c:	f7ff fe46 	bl	70dc <io_put_char>
    7450:	3e01      	subs	r6, #1
    7452:	1c7b      	adds	r3, r7, #1
    7454:	429e      	cmp	r6, r3
    7456:	d8f7      	bhi.n	7448 <io_printf+0x1b4>
    7458:	ab08      	add	r3, sp, #32
    745a:	5cf9      	ldrb	r1, [r7, r3]
    745c:	1c20      	adds	r0, r4, #0
    745e:	3f01      	subs	r7, #1
    7460:	f7ff fe3c 	bl	70dc <io_put_char>
    7464:	1c7a      	adds	r2, r7, #1
    7466:	d1f7      	bne.n	7458 <io_printf+0x1c4>
    7468:	e723      	b.n	72b2 <io_printf+0x1e>
    746a:	9a05      	ldr	r2, [sp, #20]
    746c:	9803      	ldr	r0, [sp, #12]
    746e:	1d11      	adds	r1, r2, #4
    7470:	9105      	str	r1, [sp, #20]
    7472:	6811      	ldr	r1, [r2, #0]
    7474:	9000      	str	r0, [sp, #0]
    7476:	e005      	b.n	7484 <io_printf+0x1f0>
    7478:	9a05      	ldr	r2, [sp, #20]
    747a:	1d11      	adds	r1, r2, #4
    747c:	9105      	str	r1, [sp, #20]
    747e:	6811      	ldr	r1, [r2, #0]
    7480:	9a03      	ldr	r2, [sp, #12]
    7482:	9200      	str	r2, [sp, #0]
    7484:	2200      	movs	r2, #0
    7486:	e00a      	b.n	749e <io_printf+0x20a>
    7488:	9a05      	ldr	r2, [sp, #20]
    748a:	1d11      	adds	r1, r2, #4
    748c:	6812      	ldr	r2, [r2, #0]
    748e:	9105      	str	r1, [sp, #20]
    7490:	17d0      	asrs	r0, r2, #31
    7492:	1811      	adds	r1, r2, r0
    7494:	4041      	eors	r1, r0
    7496:	0049      	lsls	r1, r1, #1
    7498:	9803      	ldr	r0, [sp, #12]
    749a:	0fd2      	lsrs	r2, r2, #31
    749c:	9000      	str	r0, [sp, #0]
    749e:	9201      	str	r2, [sp, #4]
    74a0:	1c20      	adds	r0, r4, #0
    74a2:	1c32      	adds	r2, r6, #0
    74a4:	f7ff fe94 	bl	71d0 <io_put_fixed>
    74a8:	e703      	b.n	72b2 <io_printf+0x1e>
    74aa:	9b05      	ldr	r3, [sp, #20]
    74ac:	210f      	movs	r1, #15
    74ae:	1d1a      	adds	r2, r3, #4
    74b0:	4823      	ldr	r0, [pc, #140]	; (7540 <io_printf+0x2ac>)
    74b2:	681b      	ldr	r3, [r3, #0]
    74b4:	2700      	movs	r7, #0
    74b6:	468c      	mov	ip, r1
    74b8:	9205      	str	r2, [sp, #20]
    74ba:	4662      	mov	r2, ip
    74bc:	401a      	ands	r2, r3
    74be:	5c81      	ldrb	r1, [r0, r2]
    74c0:	aa08      	add	r2, sp, #32
    74c2:	54b9      	strb	r1, [r7, r2]
    74c4:	091b      	lsrs	r3, r3, #4
    74c6:	3701      	adds	r7, #1
    74c8:	2b00      	cmp	r3, #0
    74ca:	d1f6      	bne.n	74ba <io_printf+0x226>
    74cc:	e001      	b.n	74d2 <io_printf+0x23e>
    74ce:	2f00      	cmp	r7, #0
    74d0:	d00a      	beq.n	74e8 <io_printf+0x254>
    74d2:	3f01      	subs	r7, #1
    74d4:	ab08      	add	r3, sp, #32
    74d6:	5cfb      	ldrb	r3, [r7, r3]
    74d8:	2b30      	cmp	r3, #48	; 0x30
    74da:	d105      	bne.n	74e8 <io_printf+0x254>
    74dc:	e7f7      	b.n	74ce <io_printf+0x23a>
    74de:	1c20      	adds	r0, r4, #0
    74e0:	9903      	ldr	r1, [sp, #12]
    74e2:	f7ff fdfb 	bl	70dc <io_put_char>
    74e6:	3e01      	subs	r6, #1
    74e8:	1c7b      	adds	r3, r7, #1
    74ea:	429e      	cmp	r6, r3
    74ec:	d8f7      	bhi.n	74de <io_printf+0x24a>
    74ee:	ab08      	add	r3, sp, #32
    74f0:	5cf9      	ldrb	r1, [r7, r3]
    74f2:	1c20      	adds	r0, r4, #0
    74f4:	3f01      	subs	r7, #1
    74f6:	f7ff fdf1 	bl	70dc <io_put_char>
    74fa:	1c7a      	adds	r2, r7, #1
    74fc:	d1f7      	bne.n	74ee <io_printf+0x25a>
    74fe:	e6d8      	b.n	72b2 <io_printf+0x1e>
    7500:	9b05      	ldr	r3, [sp, #20]
    7502:	1e77      	subs	r7, r6, #1
    7504:	1d1a      	adds	r2, r3, #4
    7506:	681b      	ldr	r3, [r3, #0]
    7508:	9303      	str	r3, [sp, #12]
    750a:	4b0e      	ldr	r3, [pc, #56]	; (7544 <io_printf+0x2b0>)
    750c:	9205      	str	r2, [sp, #20]
    750e:	18f6      	adds	r6, r6, r3
    7510:	00b6      	lsls	r6, r6, #2
    7512:	e00a      	b.n	752a <io_printf+0x296>
    7514:	9a03      	ldr	r2, [sp, #12]
    7516:	230f      	movs	r3, #15
    7518:	40f2      	lsrs	r2, r6
    751a:	4013      	ands	r3, r2
    751c:	4a08      	ldr	r2, [pc, #32]	; (7540 <io_printf+0x2ac>)
    751e:	1c20      	adds	r0, r4, #0
    7520:	5cd1      	ldrb	r1, [r2, r3]
    7522:	f7ff fddb 	bl	70dc <io_put_char>
    7526:	3f01      	subs	r7, #1
    7528:	3e04      	subs	r6, #4
    752a:	2f00      	cmp	r7, #0
    752c:	daf2      	bge.n	7514 <io_printf+0x280>
    752e:	e6c0      	b.n	72b2 <io_printf+0x1e>
    7530:	b00c      	add	sp, #48	; 0x30
    7532:	bcf0      	pop	{r4, r5, r6, r7}
    7534:	bc08      	pop	{r3}
    7536:	b003      	add	sp, #12
    7538:	4718      	bx	r3
    753a:	46c0      	nop			; (mov r8, r8)
    753c:	00400058 	.word	0x00400058
    7540:	00007600 	.word	0x00007600
    7544:	3fffffff 	.word	0x3fffffff
    7548:	6b636954 	.word	0x6b636954
    754c:	0a64252d 	.word	0x0a64252d
    7550:	726f4300 	.word	0x726f4300
    7554:	64252d65 	.word	0x64252d65
    7558:	63657220 	.word	0x63657220
    755c:	65766965 	.word	0x65766965
    7560:	20612073 	.word	0x20612073
    7564:	7373656d 	.word	0x7373656d
    7568:	20656761 	.word	0x20656761
    756c:	70206e69 	.word	0x70206e69
    7570:	2d74726f 	.word	0x2d74726f
    7574:	0a3a6425 	.word	0x0a3a6425
    7578:	71657300 	.word	0x71657300
    757c:	25203d20 	.word	0x25203d20
    7580:	41000a64 	.word	0x41000a64
    7584:	495f5050 	.word	0x495f5050
    7588:	5f4d4354 	.word	0x5f4d4354
    758c:	52444441 	.word	0x52444441
    7590:	30203d20 	.word	0x30203d20
    7594:	0a782578 	.word	0x0a782578
    7598:	50504100 	.word	0x50504100
    759c:	4354445f 	.word	0x4354445f
    75a0:	44415f4d 	.word	0x44415f4d
    75a4:	3d205244 	.word	0x3d205244
    75a8:	25783020 	.word	0x25783020
    75ac:	41000a78 	.word	0x41000a78
    75b0:	415f5050 	.word	0x415f5050
    75b4:	5f504d4a 	.word	0x5f504d4a
    75b8:	52444441 	.word	0x52444441
    75bc:	30203d20 	.word	0x30203d20
    75c0:	0a782578 	.word	0x0a782578
    75c4:	0000000a 	.word	0x0000000a

000075c8 <build_name>:
    75c8:	67616d70 00746e65                       pmagent.

000075d0 <build_date>:
    75d0:	571a5916 4b524153 6970532f 6b614e4e     .Y.WSARK/SpiNNak
    75e0:	04007265                                         er.

000075e3 <vic_bit>:
    75e3:	011c1804 00000c1d 006e7400                       .........

000075ec <queue_events>:
    75ec:	00006e74 00006ebc 00006eec 00006f2c     tn...n...n..,o..
    75fc:	00006e3c                                <n..

00007600 <hex>:
    7600:	33323130 37363534 62613938 66656463     0123456789abcdef
	...
